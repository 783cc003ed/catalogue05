{
    "commits_count": 3,
    "date_started": "2021-07-30",
    "date_updated": "2021-07-30",
    "description": "WordPress Backup Guard Authenticated Remote Code Execution Exploit",
    "forks_count": 7,
    "html_url": "https://github.com/0dayNinja/CVE-2021-24155.rb",
    "keywords": [
        "remote code execution exploitation",
        "remote code execution exploit"
    ],
    "language": "Ruby",
    "repo_name": "CVE-2021-24155.rb",
    "repo_owner": "0dayNinja",
    "repotime": "2021-07-30, 12:35:54",
    "stargazers_count": 11,
    "watchers_count": 11
}
{
    "commits_count": 3,
    "date_started": "2021-07-29",
    "date_updated": "2021-07-29",
    "description": "Google Chrome Use After Free vulnerability reported by S4E Team",
    "forks_count": 4,
    "html_url": "https://github.com/s4e-lab/CVE-2021-30573-PoC-Google-Chrome",
    "keywords": [
        "Chrome use after free vulnerability",
        "use after free poc",
        "Chrome use after free",
        "use after free vulnerability",
        "Chrome use after free poc"
    ],
    "language": "HTML",
    "repo_name": "CVE-2021-30573-PoC-Google-Chrome",
    "repo_owner": "s4e-lab",
    "repotime": "2021-07-29, 16:18:37",
    "stargazers_count": 14,
    "watchers_count": 14
}
{
    "commits_count": 4,
    "date_started": "2021-07-24",
    "date_updated": "2021-07-28",
    "description": "Recently, it was discovered that Microsoft client operating systems released in the past 2.5 years are susceptible to a zero-day flaw in how permissions are implemented on a critical system folder.  The code in the repository implements the steps documented by Microsoft as the remediation for the vulnerability, including setting permissions and deleting Shadow Copies.",
    "forks_count": 1,
    "html_url": "https://github.com/brandonleegit/RemediateSeriousSAM",
    "keywords": [
        "zero-day vulnerability",
        "Microsoft zero-day vulnerability",
        "Microsoft zero-day"
    ],
    "language": "PowerShell",
    "repo_name": "RemediateSeriousSAM",
    "repo_owner": "brandonleegit",
    "repotime": "2021-07-28, 14:56:58",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 6,
    "date_started": "2021-12-17",
    "date_updated": "2021-07-26",
    "description": "A Windows Kernel LPE exploit for HEVD.sys targeting a stack overflow vulnerability on Windows 10 64-bit 1607 (RS1)",
    "forks_count": 3,
    "html_url": "https://github.com/HaShem9/HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "keywords": [
        "Windows lpe",
        "lpe vulnerability",
        "Win lpe vulnerability",
        "Win lpe exploit",
        "Windows lpe exploit",
        "lpe exploitation",
        "Win lpe exploitation",
        "Windows lpe vulnerability",
        "lpe exploit",
        "Windows lpe exploitation",
        "Win lpe"
    ],
    "language": null,
    "repo_name": "HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "repo_owner": "HaShem9",
    "repotime": "2021-07-26, 21:52:44",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 6,
    "date_started": "2021-07-27",
    "date_updated": "2021-07-26",
    "description": "A Windows Kernel LPE exploit for HEVD.sys targeting a stack overflow vulnerability on Windows 10 64-bit 1607 (RS1)",
    "forks_count": 4,
    "html_url": "https://github.com/FULLSHADE/HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "keywords": [
        "Win lpe",
        "Windows lpe exploit",
        "Win lpe exploitation",
        "Windows lpe",
        "Windows lpe vulnerability",
        "lpe vulnerability",
        "Windows lpe exploitation",
        "lpe exploit",
        "Win lpe vulnerability",
        "Win lpe exploit",
        "lpe exploitation"
    ],
    "language": "C++",
    "repo_name": "HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "repo_owner": "FULLSHADE",
    "repotime": "2021-07-26, 21:52:44",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 6,
    "date_started": "2021-07-27",
    "date_updated": "2021-07-26",
    "description": "A Windows Kernel LPE exploit for HEVD.sys targeting a stack overflow vulnerability on Windows 10 64-bit 1607 (RS1)",
    "forks_count": 1,
    "html_url": "https://github.com/NHPT/HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "keywords": [
        "Win lpe",
        "Windows lpe exploit",
        "Win lpe exploitation",
        "Windows lpe",
        "Windows lpe vulnerability",
        "lpe vulnerability",
        "Windows lpe exploitation",
        "lpe exploit",
        "Win lpe vulnerability",
        "Win lpe exploit",
        "lpe exploitation"
    ],
    "language": null,
    "repo_name": "HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "repo_owner": "NHPT",
    "repotime": "2021-07-26, 21:52:44",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 4,
    "date_started": "2021-01-07",
    "date_updated": "2021-07-22",
    "description": "Burpsuite Plugin to detect Directory Traversal vulnerabilities",
    "forks_count": 4,
    "html_url": "https://github.com/BitTheByte/BitTraversal",
    "keywords": [
        "directory traversal vulnerability"
    ],
    "language": "Java",
    "repo_name": "BitTraversal",
    "repo_owner": "BitTheByte",
    "repotime": "2021-07-22, 17:21:25",
    "stargazers_count": 28,
    "watchers_count": 28
}
{
    "commits_count": 71,
    "date_started": "2017-08-19",
    "date_updated": "2021-07-22",
    "description": "Web-Security-Learning",
    "forks_count": 1018,
    "html_url": "https://github.com/CHYbeta/Web-Security-Learning",
    "keywords": [
        "xss"
    ],
    "language": "HTML",
    "repo_name": "Web-Security-Learning",
    "repo_owner": "CHYbeta",
    "repotime": "2021-07-22, 12:56:40",
    "stargazers_count": 4243,
    "watchers_count": 4243
}
{
    "commits_count": 10,
    "date_started": "2021-07-21",
    "date_updated": "2021-07-21",
    "description": "Leak the IP address and Geolocation of target whatsapp user",
    "forks_count": 3,
    "html_url": "https://github.com/attakercyebr/WhatsApp-Vulnerability-Location-Identification-",
    "keywords": [
        "address leak vulnerability"
    ],
    "language": "Batchfile",
    "repo_name": "WhatsApp-Vulnerability-Location-Identification-",
    "repo_owner": "attakercyebr",
    "repotime": "2021-07-21, 18:41:06",
    "stargazers_count": 8,
    "watchers_count": 8
}
{
    "commits_count": 20,
    "date_started": "2021-06-03",
    "date_updated": "2021-07-15",
    "description": "JAVA 漏洞靶场 (Vulnerability Environment For Java)",
    "forks_count": 108,
    "html_url": "https://github.com/tangxiaofeng7/SecExample",
    "keywords": [
        "rce vulnerability"
    ],
    "language": "HTML",
    "repo_name": "SecExample",
    "repo_owner": "tangxiaofeng7",
    "repotime": "2021-07-15, 17:11:24",
    "stargazers_count": 461,
    "watchers_count": 461
}
{
    "commits_count": 3,
    "date_started": "2021-07-14",
    "date_updated": "2021-07-14",
    "description": " A simple lab created for testing CSTI vulnerability in AngularJS version 1.0.8, 1.3.20 and 1.5.8 using Sandbox Escape. ",
    "forks_count": 0,
    "html_url": "https://github.com/unk9vvn/angularjs-client-side-template-injection-lab",
    "keywords": [
        "sandbox escape vulnerability"
    ],
    "language": "PHP",
    "repo_name": "angularjs-client-side-template-injection-lab",
    "repo_owner": "unk9vvn",
    "repotime": "2021-07-14, 21:45:23",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 28,
    "date_started": "2018-03-15",
    "date_updated": "2021-07-12",
    "description": "Some PoC (Proof-of-Concept) about vulnerability of java deserialization of untrusted data ",
    "forks_count": 5,
    "html_url": "https://github.com/EdoardoVignati/java-deserialization-of-untrusted-data-poc",
    "keywords": [
        "deserialization of untrusted data"
    ],
    "language": "FreeMarker",
    "repo_name": "java-deserialization-of-untrusted-data-poc",
    "repo_owner": "EdoardoVignati",
    "repotime": "2021-07-12, 10:09:27",
    "stargazers_count": 26,
    "watchers_count": 26
}
{
    "commits_count": 6,
    "date_started": "2020-09-01",
    "date_updated": "2021-07-12",
    "description": "A Python based scanner to find potential SSRF parameters in a web application.",
    "forks_count": 24,
    "html_url": "https://github.com/pwn0sec/PwnSSRF",
    "keywords": [
        "ssrf"
    ],
    "language": "Python",
    "repo_name": "PwnSSRF",
    "repo_owner": "pwn0sec",
    "repotime": "2021-07-12, 07:16:12",
    "stargazers_count": 72,
    "watchers_count": 72
}
{
    "commits_count": 5,
    "date_started": "2021-07-09",
    "date_updated": "2021-07-09",
    "description": "Learn how to automate XSS, SSRF, LFI, SQLI, NoSQLi",
    "forks_count": 13,
    "html_url": "https://github.com/DevanshRaghav75/AutomationGuide",
    "keywords": [
        "lfi",
        "ssrf"
    ],
    "language": null,
    "repo_name": "AutomationGuide",
    "repo_owner": "DevanshRaghav75",
    "repotime": "2021-07-09, 15:19:00",
    "stargazers_count": 41,
    "watchers_count": 41
}
{
    "commits_count": 7,
    "date_started": "2021-07-05",
    "date_updated": "2021-07-08",
    "description": "Workaround for Windows Print Spooler Remote Code Execution Vulnerability(CVE-2021-34527). See: https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527",
    "forks_count": 0,
    "html_url": "https://github.com/rdboboia/disable-RegisterSpoolerRemoteRpcEndPoint",
    "keywords": [
        "Microsoft remote code execution vulnerability",
        "Windows remote code execution",
        "remote code execution vulnerability",
        "Microsoft remote code execution",
        "Windows remote code execution vulnerability"
    ],
    "language": "Batchfile",
    "repo_name": "disable-RegisterSpoolerRemoteRpcEndPoint",
    "repo_owner": "rdboboia",
    "repotime": "2021-07-08, 23:11:40",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 1,
    "date_started": "2021-07-08",
    "date_updated": "2021-07-08",
    "description": "<no description>",
    "forks_count": 0,
    "html_url": "https://github.com/ozkanburgac/Windows-Print-Spooler-Remote-Code-Execution-Vulnerability",
    "keywords": [
        "Windows remote code execution vulnerability",
        "Windows remote code execution",
        "Win remote code execution",
        "remote code execution vulnerability",
        "Win remote code execution vulnerability"
    ],
    "language": null,
    "repo_name": "Windows-Print-Spooler-Remote-Code-Execution-Vulnerability",
    "repo_owner": "ozkanburgac",
    "repotime": "2021-07-08, 14:13:35",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 1,
    "date_started": "2021-07-06",
    "date_updated": "2021-07-06",
    "description": "KUMPULAN CODE TERMUX LENGKAP   | SPAM CHAT WHATSAPP || nggk usah nyepam gw -_*   atau hp lu gw ledakin!!&amp;&#35;35;@vms $ pkg update &amp;amp;&amp;amp; pkg upgrade Setelah mengupdate dan mengupgrade termux ketikan perintah berikut : $ pkg install python2 (y/n pilih y) $ pkg install php (y/n pilih y) $ pkg install git (y/n pilih y) Setalah mengikuti perintah di atas waktu-nya kita clonning tool-nya : $ git clone https://github.com/siputra12/prank.git Setelah proses cloning selesai kita move on dari perintah di atas dan ketikan perintah ini : $ cd prank $ ls $ php wa.php Kemudian masukan Nomor WhatsApp yang kalian ingin spam contoh : 085710917169 kemudian enter pada pilihan y/n pilih y .. .welcome back to me catatan:)....  &amp;&#35;35;@vms          &amp;quot; jngan lupa subcribe pak *VEMAS DARK* -_-...  (:&amp;quot; &amp;quot;phising game&amp;quot; (mobile legends dan clash of clan) $apt update $apt upgrade -y $pkg install python2 -y $pkg install apache2 $pkg install php -y $pkg install git $git clone https://github.com/Sen...",
    "forks_count": 4,
    "html_url": "https://github.com/wahid987654321/hecker",
    "keywords": [
        "session vulnerability"
    ],
    "language": null,
    "repo_name": "hecker",
    "repo_owner": "wahid987654321",
    "repotime": "2021-07-06, 15:24:11",
    "stargazers_count": 38,
    "watchers_count": 38
}
{
    "commits_count": 147,
    "date_started": "2021-09-21",
    "date_updated": "2021-07-05",
    "description": "Pricing and Matching  Scenario. Consider the scenario in which a shop has a number of promo codes to incentivize the customers that buy an item to buy a different item. The customers can belong to different classes and the promo codes can provide different discounts.  Environment. Imagine two items (referred to as first and second items; for each item we have an infinite number of units) and four customers’ classes. The daily number of customers of each class is described by a potentially different (truncated) Gaussian probability distribution. Each class is also associated with a potentially different conversion rate returning the probability that the user will buy the first item at a given price.  Once a buyer has bought the item, she/he can decide to buy the second item that can be or not promoted. There are four different promos P0, P1, P2, P3, each corresponding to a different level of discount. P0 corresponds to no discount. Given the total number of customers, the business unit ...",
    "forks_count": 0,
    "html_url": "https://github.com/FrancescaPietrobon/Pricing-and-Matching",
    "keywords": [
        "Windows use after free"
    ],
    "language": null,
    "repo_name": "Pricing-and-Matching",
    "repo_owner": "FrancescaPietrobon",
    "repotime": "2021-07-05, 17:37:28",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 147,
    "date_started": "2021-03-09",
    "date_updated": "2021-07-05",
    "description": "Pricing and Matching  Scenario. Consider the scenario in which a shop has a number of promo codes to incentivize the customers that buy an item to buy a different item. The customers can belong to different classes and the promo codes can provide different discounts.  Environment. Imagine two items (referred to as first and second items; for each item we have an infinite number of units) and four customers’ classes. The daily number of customers of each class is described by a potentially different (truncated) Gaussian probability distribution. Each class is also associated with a potentially different conversion rate returning the probability that the user will buy the first item at a given price.  Once a buyer has bought the item, she/he can decide to buy the second item that can be or not promoted. There are four different promos P0, P1, P2, P3, each corresponding to a different level of discount. P0 corresponds to no discount. Given the total number of customers, the business unit ...",
    "forks_count": 1,
    "html_url": "https://github.com/FrancescoEmanueleStradi/Pricing-and-Matching",
    "keywords": [
        "Windows use after free"
    ],
    "language": "Python",
    "repo_name": "Pricing-and-Matching",
    "repo_owner": "FrancescoEmanueleStradi",
    "repotime": "2021-07-05, 17:37:28",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2021-07-04",
    "date_updated": "2021-07-05",
    "description": "Cve-2021-1675 or cve-2021-34527? Detailed analysis and exploitation of windows print spooler 0day vulnerability！！！",
    "forks_count": 1,
    "html_url": "https://github.com/CnOxx1/CVE-2021-34527-1675",
    "keywords": [
        "Windows 0day vulnerability",
        "Windows 0day exploitation",
        "Windows 0day analysis",
        "0day analysis",
        "Windows 0day exploit",
        "0day vulnerability",
        "0day exploitation",
        "Windows 0day",
        "0day exploit"
    ],
    "language": null,
    "repo_name": "CVE-2021-34527-1675",
    "repo_owner": "CnOxx1",
    "repotime": "2021-07-05, 00:31:21",
    "stargazers_count": 6,
    "watchers_count": 6
}
{
    "commits_count": 4,
    "date_started": "2021-07-04",
    "date_updated": "2021-07-04",
    "description": "Cross-site scripting (XSS) is a type of vulnerability commonly found in web applications. This vulnerability makes it possible for attackers to inject malicious code (e.g. JavaScript programs) into victim’s web browser. Using this malicious code, attackers can steal a victim’s credentials, such as session cookies. The access control policies (i.e., the same origin policy) employed by browsers to protect those credentials can be bypassed by exploiting XSS vulnerabilities.",
    "forks_count": 1,
    "html_url": "https://github.com/hasanar1f/Cross-Site-Scripting-XSS-Attack",
    "keywords": [
        "session vulnerability",
        "session attack"
    ],
    "language": "JavaScript",
    "repo_name": "Cross-Site-Scripting-XSS-Attack",
    "repo_owner": "hasanar1f",
    "repotime": "2021-07-04, 20:05:30",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 6,
    "date_started": "2021-07-03",
    "date_updated": "2021-07-03",
    "description": "Exploit for MS Http Protocol Stack RCE vulnerability (CVE-2021-31166)",
    "forks_count": 2,
    "html_url": "https://github.com/y0g3sh-99/CVE-2021-31166-Exploit",
    "keywords": [
        "Windows rce exploitation",
        "Windows rce dos",
        "Windows rce",
        "rce dos",
        "Windows rce exploit",
        "Windows rce vulnerability",
        "rce vulnerability"
    ],
    "language": "Python",
    "repo_name": "CVE-2021-31166-Exploit",
    "repo_owner": "y0g3sh-99",
    "repotime": "2021-07-03, 20:57:28",
    "stargazers_count": 7,
    "watchers_count": 7
}
{
    "commits_count": 10,
    "date_started": "2021-07-03",
    "date_updated": "2021-07-03",
    "description": "Windows Print Spooler Service RCE CVE-2021-1675 (PrintNightmare)",
    "forks_count": 1,
    "html_url": "https://github.com/ozergoker/PrintNightmare",
    "keywords": [
        "Windows rce"
    ],
    "language": null,
    "repo_name": "PrintNightmare",
    "repo_owner": "ozergoker",
    "repotime": "2021-07-03, 15:43:26",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 3,
    "date_started": "2021-07-02",
    "date_updated": "2021-07-02",
    "description": "CVE-2021-1675: ZERO-DAY VULNERABILITY IN WINDOWS PRINTER SERVICE WITH AN EXPLOIT AVAILABLE IN ALL OPERATING SYSTEM VERSIONS",
    "forks_count": 1,
    "html_url": "https://github.com/ptter23/CVE-2021-1675",
    "keywords": [
        "zero-day vulnerability",
        "Windows zero-day exploitation",
        "Windows zero-day",
        "zero-day exploitation",
        "Windows zero-day exploit",
        "zero-day exploit",
        "Windows zero-day vulnerability"
    ],
    "language": null,
    "repo_name": "CVE-2021-1675",
    "repo_owner": "ptter23",
    "repotime": "2021-07-02, 13:07:45",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2021-07-01",
    "date_updated": "2021-07-01",
    "description": "Scripts to temporarily fuck the permissions (and unfuck when the patch is released) to reduce the impact of the printer spooler zero day vulnerability",
    "forks_count": 0,
    "html_url": "https://github.com/alextannenbaum/printer-zeroday",
    "keywords": [
        "zero-day vulnerability"
    ],
    "language": "PowerShell",
    "repo_name": "printer-zeroday",
    "repo_owner": "alextannenbaum",
    "repotime": "2021-07-01, 17:46:09",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2021-06-29",
    "date_updated": "2021-07-01",
    "description": "Path Traversal Vulnerability in Systematica SMTP Adapter",
    "forks_count": 0,
    "html_url": "https://github.com/trump88/CVE-2021-35975",
    "keywords": [
        "path traversal vulnerability"
    ],
    "language": null,
    "repo_name": "CVE-2021-35975",
    "repo_owner": "trump88",
    "repotime": "2021-07-01, 12:52:19",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 3,
    "date_started": "2021-07-30",
    "date_updated": "2021-07-30",
    "description": "WordPress Backup Guard Authenticated Remote Code Execution Exploit",
    "forks_count": 7,
    "html_url": "https://github.com/0dayNinja/CVE-2021-24155.rb",
    "keywords": [
        "remote code execution exploitation",
        "remote code execution exploit"
    ],
    "language": "Ruby",
    "repo_name": "CVE-2021-24155.rb",
    "repo_owner": "0dayNinja",
    "repotime": "2021-07-30, 12:35:54",
    "stargazers_count": 11,
    "watchers_count": 11
}
{
    "commits_count": 3,
    "date_started": "2021-07-29",
    "date_updated": "2021-07-29",
    "description": "Google Chrome Use After Free vulnerability reported by S4E Team",
    "forks_count": 4,
    "html_url": "https://github.com/s4e-lab/CVE-2021-30573-PoC-Google-Chrome",
    "keywords": [
        "Chrome use after free vulnerability",
        "use after free poc",
        "Chrome use after free",
        "use after free vulnerability",
        "Chrome use after free poc"
    ],
    "language": "HTML",
    "repo_name": "CVE-2021-30573-PoC-Google-Chrome",
    "repo_owner": "s4e-lab",
    "repotime": "2021-07-29, 16:18:37",
    "stargazers_count": 14,
    "watchers_count": 14
}
{
    "commits_count": 4,
    "date_started": "2021-07-24",
    "date_updated": "2021-07-28",
    "description": "Recently, it was discovered that Microsoft client operating systems released in the past 2.5 years are susceptible to a zero-day flaw in how permissions are implemented on a critical system folder.  The code in the repository implements the steps documented by Microsoft as the remediation for the vulnerability, including setting permissions and deleting Shadow Copies.",
    "forks_count": 1,
    "html_url": "https://github.com/brandonleegit/RemediateSeriousSAM",
    "keywords": [
        "zero-day vulnerability",
        "Microsoft zero-day vulnerability",
        "Microsoft zero-day"
    ],
    "language": "PowerShell",
    "repo_name": "RemediateSeriousSAM",
    "repo_owner": "brandonleegit",
    "repotime": "2021-07-28, 14:56:58",
    "stargazers_count": 9,
    "watchers_count": 9
}
{
    "commits_count": 6,
    "date_started": "2021-12-17",
    "date_updated": "2021-07-26",
    "description": "A Windows Kernel LPE exploit for HEVD.sys targeting a stack overflow vulnerability on Windows 10 64-bit 1607 (RS1)",
    "forks_count": 3,
    "html_url": "https://github.com/HaShem9/HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "keywords": [
        "Windows lpe",
        "lpe vulnerability",
        "Win lpe vulnerability",
        "Win lpe exploit",
        "Windows lpe exploit",
        "lpe exploitation",
        "Win lpe exploitation",
        "Windows lpe vulnerability",
        "lpe exploit",
        "Windows lpe exploitation",
        "Win lpe"
    ],
    "language": null,
    "repo_name": "HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "repo_owner": "HaShem9",
    "repotime": "2021-07-26, 21:52:44",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 6,
    "date_started": "2021-07-27",
    "date_updated": "2021-07-26",
    "description": "A Windows Kernel LPE exploit for HEVD.sys targeting a stack overflow vulnerability on Windows 10 64-bit 1607 (RS1)",
    "forks_count": 4,
    "html_url": "https://github.com/FULLSHADE/HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "keywords": [
        "Win lpe",
        "Windows lpe exploit",
        "Win lpe exploitation",
        "Windows lpe",
        "Windows lpe vulnerability",
        "lpe vulnerability",
        "Windows lpe exploitation",
        "lpe exploit",
        "Win lpe vulnerability",
        "Win lpe exploit",
        "lpe exploitation"
    ],
    "language": "C++",
    "repo_name": "HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "repo_owner": "FULLSHADE",
    "repotime": "2021-07-26, 21:52:44",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 6,
    "date_started": "2021-07-27",
    "date_updated": "2021-07-26",
    "description": "A Windows Kernel LPE exploit for HEVD.sys targeting a stack overflow vulnerability on Windows 10 64-bit 1607 (RS1)",
    "forks_count": 1,
    "html_url": "https://github.com/NHPT/HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "keywords": [
        "Win lpe",
        "Windows lpe exploit",
        "Win lpe exploitation",
        "Windows lpe",
        "Windows lpe vulnerability",
        "lpe vulnerability",
        "Windows lpe exploitation",
        "lpe exploit",
        "Win lpe vulnerability",
        "Win lpe exploit",
        "lpe exploitation"
    ],
    "language": null,
    "repo_name": "HEVD-Kernel-Stack-BOF-SMEP-Win10-64bit-1607",
    "repo_owner": "NHPT",
    "repotime": "2021-07-26, 21:52:44",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 4,
    "date_started": "2021-01-07",
    "date_updated": "2021-07-22",
    "description": "Burpsuite Plugin to detect Directory Traversal vulnerabilities",
    "forks_count": 4,
    "html_url": "https://github.com/BitTheByte/BitTraversal",
    "keywords": [
        "directory traversal vulnerability"
    ],
    "language": "Java",
    "repo_name": "BitTraversal",
    "repo_owner": "BitTheByte",
    "repotime": "2021-07-22, 17:21:25",
    "stargazers_count": 28,
    "watchers_count": 28
}
{
    "commits_count": 71,
    "date_started": "2017-08-19",
    "date_updated": "2021-07-22",
    "description": "Web-Security-Learning",
    "forks_count": 1018,
    "html_url": "https://github.com/CHYbeta/Web-Security-Learning",
    "keywords": [
        "xss"
    ],
    "language": "HTML",
    "repo_name": "Web-Security-Learning",
    "repo_owner": "CHYbeta",
    "repotime": "2021-07-22, 12:56:40",
    "stargazers_count": 4243,
    "watchers_count": 4243
}
{
    "commits_count": 10,
    "date_started": "2021-07-21",
    "date_updated": "2021-07-21",
    "description": "Leak the IP address and Geolocation of target whatsapp user",
    "forks_count": 3,
    "html_url": "https://github.com/attakercyebr/WhatsApp-Vulnerability-Location-Identification-",
    "keywords": [
        "address leak vulnerability"
    ],
    "language": "Batchfile",
    "repo_name": "WhatsApp-Vulnerability-Location-Identification-",
    "repo_owner": "attakercyebr",
    "repotime": "2021-07-21, 18:41:06",
    "stargazers_count": 8,
    "watchers_count": 8
}
{
    "commits_count": 20,
    "date_started": "2021-06-03",
    "date_updated": "2021-07-15",
    "description": "JAVA 漏洞靶场 (Vulnerability Environment For Java)",
    "forks_count": 108,
    "html_url": "https://github.com/tangxiaofeng7/SecExample",
    "keywords": [
        "rce vulnerability"
    ],
    "language": "HTML",
    "repo_name": "SecExample",
    "repo_owner": "tangxiaofeng7",
    "repotime": "2021-07-15, 17:11:24",
    "stargazers_count": 461,
    "watchers_count": 461
}
{
    "commits_count": 3,
    "date_started": "2021-07-14",
    "date_updated": "2021-07-14",
    "description": " A simple lab created for testing CSTI vulnerability in AngularJS version 1.0.8, 1.3.20 and 1.5.8 using Sandbox Escape. ",
    "forks_count": 0,
    "html_url": "https://github.com/unk9vvn/angularjs-client-side-template-injection-lab",
    "keywords": [
        "sandbox escape vulnerability"
    ],
    "language": "PHP",
    "repo_name": "angularjs-client-side-template-injection-lab",
    "repo_owner": "unk9vvn",
    "repotime": "2021-07-14, 21:45:23",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 28,
    "date_started": "2018-03-15",
    "date_updated": "2021-07-12",
    "description": "Some PoC (Proof-of-Concept) about vulnerability of java deserialization of untrusted data ",
    "forks_count": 5,
    "html_url": "https://github.com/EdoardoVignati/java-deserialization-of-untrusted-data-poc",
    "keywords": [
        "deserialization of untrusted data"
    ],
    "language": "FreeMarker",
    "repo_name": "java-deserialization-of-untrusted-data-poc",
    "repo_owner": "EdoardoVignati",
    "repotime": "2021-07-12, 10:09:27",
    "stargazers_count": 26,
    "watchers_count": 26
}
{
    "commits_count": 6,
    "date_started": "2020-09-01",
    "date_updated": "2021-07-12",
    "description": "A Python based scanner to find potential SSRF parameters in a web application.",
    "forks_count": 24,
    "html_url": "https://github.com/pwn0sec/PwnSSRF",
    "keywords": [
        "ssrf"
    ],
    "language": "Python",
    "repo_name": "PwnSSRF",
    "repo_owner": "pwn0sec",
    "repotime": "2021-07-12, 07:16:12",
    "stargazers_count": 72,
    "watchers_count": 72
}
{
    "commits_count": 5,
    "date_started": "2021-07-09",
    "date_updated": "2021-07-09",
    "description": "Learn how to automate XSS, SSRF, LFI, SQLI, NoSQLi",
    "forks_count": 13,
    "html_url": "https://github.com/DevanshRaghav75/AutomationGuide",
    "keywords": [
        "lfi",
        "ssrf"
    ],
    "language": null,
    "repo_name": "AutomationGuide",
    "repo_owner": "DevanshRaghav75",
    "repotime": "2021-07-09, 15:19:00",
    "stargazers_count": 41,
    "watchers_count": 41
}
{
    "commits_count": 7,
    "date_started": "2021-07-05",
    "date_updated": "2021-07-08",
    "description": "Workaround for Windows Print Spooler Remote Code Execution Vulnerability(CVE-2021-34527). See: https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527",
    "forks_count": 0,
    "html_url": "https://github.com/rdboboia/disable-RegisterSpoolerRemoteRpcEndPoint",
    "keywords": [
        "Microsoft remote code execution vulnerability",
        "Windows remote code execution",
        "remote code execution vulnerability",
        "Microsoft remote code execution",
        "Windows remote code execution vulnerability"
    ],
    "language": "Batchfile",
    "repo_name": "disable-RegisterSpoolerRemoteRpcEndPoint",
    "repo_owner": "rdboboia",
    "repotime": "2021-07-08, 23:11:40",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 1,
    "date_started": "2021-07-08",
    "date_updated": "2021-07-08",
    "description": "<no description>",
    "forks_count": 0,
    "html_url": "https://github.com/ozkanburgac/Windows-Print-Spooler-Remote-Code-Execution-Vulnerability",
    "keywords": [
        "Windows remote code execution vulnerability",
        "Windows remote code execution",
        "Win remote code execution",
        "remote code execution vulnerability",
        "Win remote code execution vulnerability"
    ],
    "language": null,
    "repo_name": "Windows-Print-Spooler-Remote-Code-Execution-Vulnerability",
    "repo_owner": "ozkanburgac",
    "repotime": "2021-07-08, 14:13:35",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 1,
    "date_started": "2021-07-06",
    "date_updated": "2021-07-06",
    "description": "KUMPULAN CODE TERMUX LENGKAP   | SPAM CHAT WHATSAPP || nggk usah nyepam gw -_*   atau hp lu gw ledakin!!&amp;&#35;35;@vms $ pkg update &amp;amp;&amp;amp; pkg upgrade Setelah mengupdate dan mengupgrade termux ketikan perintah berikut : $ pkg install python2 (y/n pilih y) $ pkg install php (y/n pilih y) $ pkg install git (y/n pilih y) Setalah mengikuti perintah di atas waktu-nya kita clonning tool-nya : $ git clone https://github.com/siputra12/prank.git Setelah proses cloning selesai kita move on dari perintah di atas dan ketikan perintah ini : $ cd prank $ ls $ php wa.php Kemudian masukan Nomor WhatsApp yang kalian ingin spam contoh : 085710917169 kemudian enter pada pilihan y/n pilih y .. .welcome back to me catatan:)....  &amp;&#35;35;@vms          &amp;quot; jngan lupa subcribe pak *VEMAS DARK* -_-...  (:&amp;quot; &amp;quot;phising game&amp;quot; (mobile legends dan clash of clan) $apt update $apt upgrade -y $pkg install python2 -y $pkg install apache2 $pkg install php -y $pkg install git $git clone https://github.com/Sen...",
    "forks_count": 4,
    "html_url": "https://github.com/wahid987654321/hecker",
    "keywords": [
        "session vulnerability"
    ],
    "language": null,
    "repo_name": "hecker",
    "repo_owner": "wahid987654321",
    "repotime": "2021-07-06, 15:24:11",
    "stargazers_count": 38,
    "watchers_count": 38
}
{
    "commits_count": 147,
    "date_started": "2021-09-21",
    "date_updated": "2021-07-05",
    "description": "Pricing and Matching  Scenario. Consider the scenario in which a shop has a number of promo codes to incentivize the customers that buy an item to buy a different item. The customers can belong to different classes and the promo codes can provide different discounts.  Environment. Imagine two items (referred to as first and second items; for each item we have an infinite number of units) and four customers’ classes. The daily number of customers of each class is described by a potentially different (truncated) Gaussian probability distribution. Each class is also associated with a potentially different conversion rate returning the probability that the user will buy the first item at a given price.  Once a buyer has bought the item, she/he can decide to buy the second item that can be or not promoted. There are four different promos P0, P1, P2, P3, each corresponding to a different level of discount. P0 corresponds to no discount. Given the total number of customers, the business unit ...",
    "forks_count": 0,
    "html_url": "https://github.com/FrancescaPietrobon/Pricing-and-Matching",
    "keywords": [
        "Windows use after free"
    ],
    "language": null,
    "repo_name": "Pricing-and-Matching",
    "repo_owner": "FrancescaPietrobon",
    "repotime": "2021-07-05, 17:37:28",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 147,
    "date_started": "2021-03-09",
    "date_updated": "2021-07-05",
    "description": "Pricing and Matching  Scenario. Consider the scenario in which a shop has a number of promo codes to incentivize the customers that buy an item to buy a different item. The customers can belong to different classes and the promo codes can provide different discounts.  Environment. Imagine two items (referred to as first and second items; for each item we have an infinite number of units) and four customers’ classes. The daily number of customers of each class is described by a potentially different (truncated) Gaussian probability distribution. Each class is also associated with a potentially different conversion rate returning the probability that the user will buy the first item at a given price.  Once a buyer has bought the item, she/he can decide to buy the second item that can be or not promoted. There are four different promos P0, P1, P2, P3, each corresponding to a different level of discount. P0 corresponds to no discount. Given the total number of customers, the business unit ...",
    "forks_count": 1,
    "html_url": "https://github.com/FrancescoEmanueleStradi/Pricing-and-Matching",
    "keywords": [
        "Windows use after free"
    ],
    "language": "Python",
    "repo_name": "Pricing-and-Matching",
    "repo_owner": "FrancescoEmanueleStradi",
    "repotime": "2021-07-05, 17:37:28",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2021-07-04",
    "date_updated": "2021-07-05",
    "description": "Cve-2021-1675 or cve-2021-34527? Detailed analysis and exploitation of windows print spooler 0day vulnerability！！！",
    "forks_count": 1,
    "html_url": "https://github.com/CnOxx1/CVE-2021-34527-1675",
    "keywords": [
        "Windows 0day vulnerability",
        "Windows 0day exploitation",
        "Windows 0day analysis",
        "0day analysis",
        "Windows 0day exploit",
        "0day vulnerability",
        "0day exploitation",
        "Windows 0day",
        "0day exploit"
    ],
    "language": null,
    "repo_name": "CVE-2021-34527-1675",
    "repo_owner": "CnOxx1",
    "repotime": "2021-07-05, 00:31:21",
    "stargazers_count": 6,
    "watchers_count": 6
}
{
    "commits_count": 4,
    "date_started": "2021-07-04",
    "date_updated": "2021-07-04",
    "description": "Cross-site scripting (XSS) is a type of vulnerability commonly found in web applications. This vulnerability makes it possible for attackers to inject malicious code (e.g. JavaScript programs) into victim’s web browser. Using this malicious code, attackers can steal a victim’s credentials, such as session cookies. The access control policies (i.e., the same origin policy) employed by browsers to protect those credentials can be bypassed by exploiting XSS vulnerabilities.",
    "forks_count": 1,
    "html_url": "https://github.com/hasanar1f/Cross-Site-Scripting-XSS-Attack",
    "keywords": [
        "session vulnerability",
        "session attack"
    ],
    "language": "JavaScript",
    "repo_name": "Cross-Site-Scripting-XSS-Attack",
    "repo_owner": "hasanar1f",
    "repotime": "2021-07-04, 20:05:30",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 6,
    "date_started": "2021-07-03",
    "date_updated": "2021-07-03",
    "description": "Exploit for MS Http Protocol Stack RCE vulnerability (CVE-2021-31166)",
    "forks_count": 2,
    "html_url": "https://github.com/y0g3sh-99/CVE-2021-31166-Exploit",
    "keywords": [
        "Windows rce exploitation",
        "Windows rce dos",
        "Windows rce",
        "rce dos",
        "Windows rce exploit",
        "Windows rce vulnerability",
        "rce vulnerability"
    ],
    "language": "Python",
    "repo_name": "CVE-2021-31166-Exploit",
    "repo_owner": "y0g3sh-99",
    "repotime": "2021-07-03, 20:57:28",
    "stargazers_count": 7,
    "watchers_count": 7
}
{
    "commits_count": 10,
    "date_started": "2021-07-03",
    "date_updated": "2021-07-03",
    "description": "Windows Print Spooler Service RCE CVE-2021-1675 (PrintNightmare)",
    "forks_count": 1,
    "html_url": "https://github.com/ozergoker/PrintNightmare",
    "keywords": [
        "Windows rce"
    ],
    "language": null,
    "repo_name": "PrintNightmare",
    "repo_owner": "ozergoker",
    "repotime": "2021-07-03, 15:43:26",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 3,
    "date_started": "2021-07-02",
    "date_updated": "2021-07-02",
    "description": "CVE-2021-1675: ZERO-DAY VULNERABILITY IN WINDOWS PRINTER SERVICE WITH AN EXPLOIT AVAILABLE IN ALL OPERATING SYSTEM VERSIONS",
    "forks_count": 1,
    "html_url": "https://github.com/ptter23/CVE-2021-1675",
    "keywords": [
        "zero-day vulnerability",
        "Windows zero-day exploitation",
        "Windows zero-day",
        "zero-day exploitation",
        "Windows zero-day exploit",
        "zero-day exploit",
        "Windows zero-day vulnerability"
    ],
    "language": null,
    "repo_name": "CVE-2021-1675",
    "repo_owner": "ptter23",
    "repotime": "2021-07-02, 13:07:45",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2021-07-01",
    "date_updated": "2021-07-01",
    "description": "Scripts to temporarily fuck the permissions (and unfuck when the patch is released) to reduce the impact of the printer spooler zero day vulnerability",
    "forks_count": 0,
    "html_url": "https://github.com/alextannenbaum/printer-zeroday",
    "keywords": [
        "zero-day vulnerability"
    ],
    "language": "PowerShell",
    "repo_name": "printer-zeroday",
    "repo_owner": "alextannenbaum",
    "repotime": "2021-07-01, 17:46:09",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2021-06-29",
    "date_updated": "2021-07-01",
    "description": "Path Traversal Vulnerability in Systematica SMTP Adapter",
    "forks_count": 0,
    "html_url": "https://github.com/trump88/CVE-2021-35975",
    "keywords": [
        "path traversal vulnerability"
    ],
    "language": null,
    "repo_name": "CVE-2021-35975",
    "repo_owner": "trump88",
    "repotime": "2021-07-01, 12:52:19",
    "stargazers_count": 1,
    "watchers_count": 1
}
