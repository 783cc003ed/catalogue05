{
    "commits_count": 6,
    "date_started": "2019-05-20",
    "date_updated": "2019-05-24",
    "description": "Proof of concept for hooking to memory allocation functions and detecting possible memory leaks.",
    "forks_count": 0,
    "html_url": "https://github.com/W3ndige/memory-allocation-tracer",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "C",
    "repo_name": "memory-allocation-tracer",
    "repo_owner": "W3ndige",
    "repotime": "2019-05-24, 21:47:58",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 0,
    "date_started": "2019-05-22",
    "date_updated": "2019-05-22",
    "description": "Hello, students and employees, I am dedicating this post to all candidates/students who missing their grateful career opportunities to go for SAS training after B.Pharm and M.Pharm Jobs. So ultimately my today’s post is absolutely spotlighted on the huge and the vast difference in career opportunities in pursuing SAS after B.Pharm rather than any job or M.Pharm.      The Main difference is that the course duration for any Post graduation will be minimum 1-3 years whereas SAS certification the course time period will be around 2-6 months. If you go M. Pharm the career investment will be 3- 4 Lakhs, it's so tough and it isn't satisfaction.  There is no doubt jobs are available but the job vacancies will be very high. As a result of knowledge and skills, students fail to acquire the job. In comparison, after completion of SAS certification course in 6 months, there is higher demand in industry and the current market as large no. of vacancies available but less no. of candidates due to lac...",
    "forks_count": 0,
    "html_url": "https://github.com/AspireTechsoft/What-are-the-career-opportunities-in-pursuing-SAS-after-B.Pharm-and-M.-Pharm-is-Industries-and-clin",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "What-are-the-career-opportunities-in-pursuing-SAS-after-B.Pharm-and-M.-Pharm-is-Industries-and-clin",
    "repo_owner": "AspireTechsoft",
    "repotime": "2019-05-22, 08:57:38",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 7,
    "date_started": "2019-03-02",
    "date_updated": "2019-05-20",
    "description": "SEIS 665 Assignment 2: Linux &amp;amp; Git Overview This week we will focus on becoming familiar with launching a Linux server and working with some basic Linux and Git commands. We will use AWS to launch and host the Linux server. AWS might seem a little confusing at this point. Don’t worry, we will gain much more hands-on experience with AWS throughout the course. The goal is to get you comfortable working with the technology and not overwhelm you with all the details.  Requirements You need to have a personal AWS account and GitHub account for this assignment. You should also read the Git Hands-on Guide and Linux Hands-on Guide before beginning this exercise.  A word about grading One of the key DevOps practices we learn about in this class is the use of automation to increase the speed and repeatability of processes. Automation is utilized during the assignment grading process to review and assess your work.  It’s important that you follow the instructions in each assignment and type i...",
    "forks_count": 18,
    "html_url": "https://github.com/nyaundid/EC2-AWS-AND-SHELL",
    "keywords": [
        "Windows escalation of privileges",
        "empty string password",
        "hard coded password"
    ],
    "language": "Shell",
    "repo_name": "EC2-AWS-AND-SHELL",
    "repo_owner": "nyaundid",
    "repotime": "2019-05-20, 20:12:16",
    "stargazers_count": 39,
    "watchers_count": 39
}
{
    "commits_count": 45,
    "date_started": "2018-12-03",
    "date_updated": "2019-05-14",
    "description": "Proof of Concept - RCE Exploitation : Git submodules' names vulnerability  - Ensimag November 2018",
    "forks_count": 0,
    "html_url": "https://github.com/ygouzerh/CVE-2018-11235",
    "keywords": [
        "rce proof of concept"
    ],
    "language": "Python",
    "repo_name": "CVE-2018-11235",
    "repo_owner": "ygouzerh",
    "repotime": "2019-05-14, 10:06:17",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 5,
    "date_started": "2019-05-12",
    "date_updated": "2019-05-12",
    "description": "The join_session_keyring function in security/keys/process_keys.c in the Linux kernel before 4.4.1 mishandles object references in a certain error case, which allows local users to gain privileges or cause a denial of service (integer overflow and use-after-free) via crafted keyctl commands.",
    "forks_count": 0,
    "html_url": "https://github.com/Spartan-X/Refcount-Overflow-Use-After-Free",
    "keywords": [
        "use after free denial of service"
    ],
    "language": null,
    "repo_name": "Refcount-Overflow-Use-After-Free",
    "repo_owner": "Spartan-X",
    "repotime": "2019-05-12, 19:23:04",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 27,
    "date_started": "2019-11-04",
    "date_updated": "2019-05-12",
    "description": "Advanced TCP-IP session hijack for any unencrypted protocols and inject data using same credentials stealthily",
    "forks_count": 5,
    "html_url": "https://github.com/marciopocebon/TCP-IP-Session-Hijacker",
    "keywords": [
        "session hijacking"
    ],
    "language": null,
    "repo_name": "TCP-IP-Session-Hijacker",
    "repo_owner": "marciopocebon",
    "repotime": "2019-05-12, 09:10:27",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 48,
    "date_started": "2017-03-07",
    "date_updated": "2019-05-09",
    "description": "Automatic remote/local file inclusion vulnerability analysis and exploit tool",
    "forks_count": 16,
    "html_url": "https://github.com/Hack-Hut/CrabStick",
    "keywords": [
        "local file inclusion"
    ],
    "language": "Python",
    "repo_name": "CrabStick",
    "repo_owner": "Hack-Hut",
    "repotime": "2019-05-09, 00:04:00",
    "stargazers_count": 60,
    "watchers_count": 60
}
{
    "commits_count": 8,
    "date_started": "2019-04-25",
    "date_updated": "2019-05-02",
    "description": "&amp;&#35;35; Node.js &amp;amp; MySQL  &amp;&#35;35;&amp;&#35;35; Overview  In this activity, you'll be creating an Amazon-like storefront with the MySQL skills you learned this unit. The app will take in orders from customers and deplete stock from the store's inventory. As a bonus task, you can program your app to track product sales across your store's departments and then provide a summary of the highest-grossing departments in the store.  Make sure you save and require the MySQL and Inquirer npm packages in your homework files--your app will need them for data input and storage.  &amp;&#35;35;&amp;&#35;35; Submission Guide  Make sure you use the normal GitHub. Because this is a CLI App, there will be no need to deploy it to Heroku. This time, though, you need to include screenshots, a gif, and/or a video showing us that you got the app working with no bugs. You can include these screenshots or a link to a video in a `README.md` file.  * Include screenshots (or a video) of typical user flows through your application (for the...",
    "forks_count": 0,
    "html_url": "https://github.com/itsrichardmai/Amazon-Store-Front",
    "keywords": [
        "Windows use after free"
    ],
    "language": "JavaScript",
    "repo_name": "Amazon-Store-Front",
    "repo_owner": "itsrichardmai",
    "repotime": "2019-05-02, 19:44:56",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2019-05-02",
    "date_updated": "2019-05-03",
    "description": "A project based on android which provide the online booking of room for pg/hotel /apartment . The Authentic user can add room to this app which is shown to the user . The Jetflix of mobile technology opens the windows to the android app. The websites are vanishing and the mobile phones are emerging. It’s the time to change from conventional websites to apps, which has become the part of our daily routine. we are introducing Jetflix.apk‟ the android application software which would be solving the problem of room booking in the University .Not only we can use this app in university but we can use this app anywhere. It works as the guidance for students by providing the details of free available rooms nearby .After searching for room one can find their detail and also contact the owner of room . This project gives a total solution to everyone student like a hub. It gives us more comfort and a better user interface . The student can easily book room as well as contact the room provider thr...",
    "forks_count": 0,
    "html_url": "https://github.com/mohitsinghnegi1/JetFlix2",
    "keywords": [
        "Windows use after free"
    ],
    "language": "Java",
    "repo_name": "JetFlix2",
    "repo_owner": "mohitsinghnegi1",
    "repotime": "2019-05-03, 01:23:17",
    "stargazers_count": 6,
    "watchers_count": 6
}
{
    "commits_count": 6,
    "date_started": "2019-05-20",
    "date_updated": "2019-05-24",
    "description": "Proof of concept for hooking to memory allocation functions and detecting possible memory leaks.",
    "forks_count": 0,
    "html_url": "https://github.com/W3ndige/memory-allocation-tracer",
    "keywords": [
        "memory leak proof of concept"
    ],
    "language": "C",
    "repo_name": "memory-allocation-tracer",
    "repo_owner": "W3ndige",
    "repotime": "2019-05-24, 21:47:58",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 0,
    "date_started": "2019-05-22",
    "date_updated": "2019-05-22",
    "description": "Hello, students and employees, I am dedicating this post to all candidates/students who missing their grateful career opportunities to go for SAS training after B.Pharm and M.Pharm Jobs. So ultimately my today’s post is absolutely spotlighted on the huge and the vast difference in career opportunities in pursuing SAS after B.Pharm rather than any job or M.Pharm.      The Main difference is that the course duration for any Post graduation will be minimum 1-3 years whereas SAS certification the course time period will be around 2-6 months. If you go M. Pharm the career investment will be 3- 4 Lakhs, it's so tough and it isn't satisfaction.  There is no doubt jobs are available but the job vacancies will be very high. As a result of knowledge and skills, students fail to acquire the job. In comparison, after completion of SAS certification course in 6 months, there is higher demand in industry and the current market as large no. of vacancies available but less no. of candidates due to lac...",
    "forks_count": 0,
    "html_url": "https://github.com/AspireTechsoft/What-are-the-career-opportunities-in-pursuing-SAS-after-B.Pharm-and-M.-Pharm-is-Industries-and-clin",
    "keywords": [
        "use after free analysis"
    ],
    "language": null,
    "repo_name": "What-are-the-career-opportunities-in-pursuing-SAS-after-B.Pharm-and-M.-Pharm-is-Industries-and-clin",
    "repo_owner": "AspireTechsoft",
    "repotime": "2019-05-22, 08:57:38",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 7,
    "date_started": "2019-03-02",
    "date_updated": "2019-05-20",
    "description": "SEIS 665 Assignment 2: Linux &amp;amp; Git Overview This week we will focus on becoming familiar with launching a Linux server and working with some basic Linux and Git commands. We will use AWS to launch and host the Linux server. AWS might seem a little confusing at this point. Don’t worry, we will gain much more hands-on experience with AWS throughout the course. The goal is to get you comfortable working with the technology and not overwhelm you with all the details.  Requirements You need to have a personal AWS account and GitHub account for this assignment. You should also read the Git Hands-on Guide and Linux Hands-on Guide before beginning this exercise.  A word about grading One of the key DevOps practices we learn about in this class is the use of automation to increase the speed and repeatability of processes. Automation is utilized during the assignment grading process to review and assess your work.  It’s important that you follow the instructions in each assignment and type i...",
    "forks_count": 18,
    "html_url": "https://github.com/nyaundid/EC2-AWS-AND-SHELL",
    "keywords": [
        "Windows escalation of privileges",
        "empty string password",
        "hard coded password"
    ],
    "language": "Shell",
    "repo_name": "EC2-AWS-AND-SHELL",
    "repo_owner": "nyaundid",
    "repotime": "2019-05-20, 20:12:16",
    "stargazers_count": 39,
    "watchers_count": 39
}
{
    "commits_count": 45,
    "date_started": "2018-12-03",
    "date_updated": "2019-05-14",
    "description": "Proof of Concept - RCE Exploitation : Git submodules' names vulnerability  - Ensimag November 2018",
    "forks_count": 0,
    "html_url": "https://github.com/ygouzerh/CVE-2018-11235",
    "keywords": [
        "rce proof of concept"
    ],
    "language": "Python",
    "repo_name": "CVE-2018-11235",
    "repo_owner": "ygouzerh",
    "repotime": "2019-05-14, 10:06:17",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 5,
    "date_started": "2019-05-12",
    "date_updated": "2019-05-12",
    "description": "The join_session_keyring function in security/keys/process_keys.c in the Linux kernel before 4.4.1 mishandles object references in a certain error case, which allows local users to gain privileges or cause a denial of service (integer overflow and use-after-free) via crafted keyctl commands.",
    "forks_count": 0,
    "html_url": "https://github.com/Spartan-X/Refcount-Overflow-Use-After-Free",
    "keywords": [
        "use after free denial of service"
    ],
    "language": null,
    "repo_name": "Refcount-Overflow-Use-After-Free",
    "repo_owner": "Spartan-X",
    "repotime": "2019-05-12, 19:23:04",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 27,
    "date_started": "2019-11-04",
    "date_updated": "2019-05-12",
    "description": "Advanced TCP-IP session hijack for any unencrypted protocols and inject data using same credentials stealthily",
    "forks_count": 5,
    "html_url": "https://github.com/marciopocebon/TCP-IP-Session-Hijacker",
    "keywords": [
        "session hijacking"
    ],
    "language": null,
    "repo_name": "TCP-IP-Session-Hijacker",
    "repo_owner": "marciopocebon",
    "repotime": "2019-05-12, 09:10:27",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 48,
    "date_started": "2017-03-07",
    "date_updated": "2019-05-09",
    "description": "Automatic remote/local file inclusion vulnerability analysis and exploit tool",
    "forks_count": 16,
    "html_url": "https://github.com/Hack-Hut/CrabStick",
    "keywords": [
        "local file inclusion"
    ],
    "language": "Python",
    "repo_name": "CrabStick",
    "repo_owner": "Hack-Hut",
    "repotime": "2019-05-09, 00:04:00",
    "stargazers_count": 60,
    "watchers_count": 60
}
{
    "commits_count": 8,
    "date_started": "2019-04-25",
    "date_updated": "2019-05-02",
    "description": "&amp;&#35;35; Node.js &amp;amp; MySQL  &amp;&#35;35;&amp;&#35;35; Overview  In this activity, you'll be creating an Amazon-like storefront with the MySQL skills you learned this unit. The app will take in orders from customers and deplete stock from the store's inventory. As a bonus task, you can program your app to track product sales across your store's departments and then provide a summary of the highest-grossing departments in the store.  Make sure you save and require the MySQL and Inquirer npm packages in your homework files--your app will need them for data input and storage.  &amp;&#35;35;&amp;&#35;35; Submission Guide  Make sure you use the normal GitHub. Because this is a CLI App, there will be no need to deploy it to Heroku. This time, though, you need to include screenshots, a gif, and/or a video showing us that you got the app working with no bugs. You can include these screenshots or a link to a video in a `README.md` file.  * Include screenshots (or a video) of typical user flows through your application (for the...",
    "forks_count": 0,
    "html_url": "https://github.com/itsrichardmai/Amazon-Store-Front",
    "keywords": [
        "Windows use after free"
    ],
    "language": "JavaScript",
    "repo_name": "Amazon-Store-Front",
    "repo_owner": "itsrichardmai",
    "repotime": "2019-05-02, 19:44:56",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2019-05-02",
    "date_updated": "2019-05-03",
    "description": "A project based on android which provide the online booking of room for pg/hotel /apartment . The Authentic user can add room to this app which is shown to the user . The Jetflix of mobile technology opens the windows to the android app. The websites are vanishing and the mobile phones are emerging. It’s the time to change from conventional websites to apps, which has become the part of our daily routine. we are introducing Jetflix.apk‟ the android application software which would be solving the problem of room booking in the University .Not only we can use this app in university but we can use this app anywhere. It works as the guidance for students by providing the details of free available rooms nearby .After searching for room one can find their detail and also contact the owner of room . This project gives a total solution to everyone student like a hub. It gives us more comfort and a better user interface . The student can easily book room as well as contact the room provider thr...",
    "forks_count": 0,
    "html_url": "https://github.com/mohitsinghnegi1/JetFlix2",
    "keywords": [
        "Windows use after free"
    ],
    "language": "Java",
    "repo_name": "JetFlix2",
    "repo_owner": "mohitsinghnegi1",
    "repotime": "2019-05-03, 01:23:17",
    "stargazers_count": 6,
    "watchers_count": 6
}
