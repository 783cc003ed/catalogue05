{
    "commits_count": 152,
    "date_started": "2010-01-09",
    "date_updated": "2025-02-27",
    "description": "A database resource control interface for Ruby that lets you avoid hard coding your passwords",
    "forks_count": 0,
    "html_url": "https://github.com/djberg96/dbi-dbrc",
    "keywords": [
        "hard coded password"
    ],
    "language": "Ruby",
    "repo_name": "dbi-dbrc",
    "repo_owner": "djberg96",
    "repotime": "2025-02-27, 06:40:48",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 4,
    "date_started": "2025-02-27",
    "date_updated": "2025-02-27",
    "description": "**Problem Statement:**   Uber faces challenges in managing rides, payments, drivers, and city-specific issues. To stay competitive and expand, it needs in-depth data analysis to address revenue leaks, driver performance, and high cancellation rates. This project uses SQL to explore operational data and uncover insights for improved efficiency.",
    "forks_count": 0,
    "html_url": "https://github.com/drish08/Uber-Data-Analysis",
    "keywords": [
        "address leak analysis"
    ],
    "language": "TSQL",
    "repo_name": "Uber-Data-Analysis",
    "repo_owner": "drish08",
    "repotime": "2025-02-27, 16:58:38",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 176,
    "date_started": "2015-05-28",
    "date_updated": "2025-02-24",
    "description": "HackSys Extreme Vulnerable Driver (HEVD) - Windows &amp;amp; Linux",
    "forks_count": 550,
    "html_url": "https://github.com/hacksysteam/HackSysExtremeVulnerableDriver",
    "keywords": [
        "vulnerability",
        "Windows uaf vulnerability",
        "uaf exploitation",
        "Windows uaf exploitation",
        "uaf vulnerability",
        "Windows uaf"
    ],
    "language": "C",
    "repo_name": "HackSysExtremeVulnerableDriver",
    "repo_owner": "hacksysteam",
    "repotime": "2025-02-24, 17:49:16",
    "stargazers_count": 2683,
    "watchers_count": 2683
}
{
    "commits_count": 51,
    "date_started": "2021-10-17",
    "date_updated": "2025-02-21",
    "description": "Consider  the  design  of  a  database  for  a  web  site  that  allow  people  to  buy  and  sell  a  cypto called PPS (see website testing.ppswap.org). Only registered users can buy and sell PPS. Each user is identified by a userid, which is an email, first name, last name, birthday, address (street number, street, city, state, and zip code), balance of PPS and balance of dollar.  Initially, both PPS and dollar balances are zero. A user can withdraw and deposit dollars. A special user root (this is the only user whose id is root and not an email) initially will have the whole supply of PPS, which is 1T. A user will sell and buy PPS only with this special user root (in real life, this special root might be just a smart contract). The price of the PPS is set to 1M/$ initially. For the simplicity of this project, we assume each buy will increase the price by a little: each dollar can buy 1 less PPS after each buy. In the same way, each sell will decrease the price a little bit:  each  d...",
    "forks_count": 5,
    "html_url": "https://github.com/jonschumaker/PPS_Project",
    "keywords": [
        "hard coded password"
    ],
    "language": "Java",
    "repo_name": "PPS_Project",
    "repo_owner": "jonschumaker",
    "repotime": "2025-02-21, 20:40:55",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 296,
    "date_started": "2022-09-03",
    "date_updated": "2025-02-17",
    "description": "Tests URLs for Local File Inclusion (LFI), Remote File Inclusion (RFI),   SQL injection (SQLi), and Cross Site Scripting (XSS), Server Side Template Injection (SSTI), and Open Redirects.",
    "forks_count": 19,
    "html_url": "https://github.com/ronin-rb/ronin-vulns",
    "keywords": [
        "local file inclusion",
        "cross-side-scripting"
    ],
    "language": "Ruby",
    "repo_name": "ronin-vulns",
    "repo_owner": "ronin-rb",
    "repotime": "2025-02-17, 13:24:05",
    "stargazers_count": 77,
    "watchers_count": 77
}
{
    "commits_count": 388,
    "date_started": "2018-08-11",
    "date_updated": "2025-02-03",
    "description": "Script for orchestrating mana rogue WiFi Access Points.",
    "forks_count": 35,
    "html_url": "https://github.com/sensepost/berate_ap",
    "keywords": [
        "by_owner"
    ],
    "language": "Shell",
    "repo_name": "berate_ap",
    "repo_owner": "sensepost",
    "repotime": "2025-02-03, 11:46:09",
    "stargazers_count": 243,
    "watchers_count": 243
}
{
    "commits_count": 152,
    "date_started": "2010-01-09",
    "date_updated": "2025-02-27",
    "description": "A database resource control interface for Ruby that lets you avoid hard coding your passwords",
    "forks_count": 0,
    "html_url": "https://github.com/djberg96/dbi-dbrc",
    "keywords": [
        "hard coded password"
    ],
    "language": "Ruby",
    "repo_name": "dbi-dbrc",
    "repo_owner": "djberg96",
    "repotime": "2025-02-27, 06:40:48",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 4,
    "date_started": "2025-02-27",
    "date_updated": "2025-02-27",
    "description": "**Problem Statement:**   Uber faces challenges in managing rides, payments, drivers, and city-specific issues. To stay competitive and expand, it needs in-depth data analysis to address revenue leaks, driver performance, and high cancellation rates. This project uses SQL to explore operational data and uncover insights for improved efficiency.",
    "forks_count": 0,
    "html_url": "https://github.com/drish08/Uber-Data-Analysis",
    "keywords": [
        "address leak analysis"
    ],
    "language": "TSQL",
    "repo_name": "Uber-Data-Analysis",
    "repo_owner": "drish08",
    "repotime": "2025-02-27, 16:58:38",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 176,
    "date_started": "2015-05-28",
    "date_updated": "2025-02-24",
    "description": "HackSys Extreme Vulnerable Driver (HEVD) - Windows &amp;amp; Linux",
    "forks_count": 549,
    "html_url": "https://github.com/hacksysteam/HackSysExtremeVulnerableDriver",
    "keywords": [
        "vulnerability",
        "Windows uaf vulnerability",
        "uaf exploitation",
        "Windows uaf exploitation",
        "uaf vulnerability",
        "Windows uaf"
    ],
    "language": "C",
    "repo_name": "HackSysExtremeVulnerableDriver",
    "repo_owner": "hacksysteam",
    "repotime": "2025-02-24, 17:49:16",
    "stargazers_count": 2687,
    "watchers_count": 2687
}
{
    "commits_count": 51,
    "date_started": "2021-10-17",
    "date_updated": "2025-02-21",
    "description": "Consider  the  design  of  a  database  for  a  web  site  that  allow  people  to  buy  and  sell  a  cypto called PPS (see website testing.ppswap.org). Only registered users can buy and sell PPS. Each user is identified by a userid, which is an email, first name, last name, birthday, address (street number, street, city, state, and zip code), balance of PPS and balance of dollar.  Initially, both PPS and dollar balances are zero. A user can withdraw and deposit dollars. A special user root (this is the only user whose id is root and not an email) initially will have the whole supply of PPS, which is 1T. A user will sell and buy PPS only with this special user root (in real life, this special root might be just a smart contract). The price of the PPS is set to 1M/$ initially. For the simplicity of this project, we assume each buy will increase the price by a little: each dollar can buy 1 less PPS after each buy. In the same way, each sell will decrease the price a little bit:  each  d...",
    "forks_count": 5,
    "html_url": "https://github.com/jonschumaker/PPS_Project",
    "keywords": [
        "hard coded password"
    ],
    "language": "Java",
    "repo_name": "PPS_Project",
    "repo_owner": "jonschumaker",
    "repotime": "2025-02-21, 20:40:55",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 296,
    "date_started": "2022-09-03",
    "date_updated": "2025-02-17",
    "description": "Tests URLs for Local File Inclusion (LFI), Remote File Inclusion (RFI),   SQL injection (SQLi), and Cross Site Scripting (XSS), Server Side Template Injection (SSTI), and Open Redirects.",
    "forks_count": 19,
    "html_url": "https://github.com/ronin-rb/ronin-vulns",
    "keywords": [
        "local file inclusion",
        "cross-side-scripting"
    ],
    "language": "Ruby",
    "repo_name": "ronin-vulns",
    "repo_owner": "ronin-rb",
    "repotime": "2025-02-17, 13:24:05",
    "stargazers_count": 77,
    "watchers_count": 77
}
{
    "commits_count": 388,
    "date_started": "2018-08-11",
    "date_updated": "2025-02-03",
    "description": "Script for orchestrating mana rogue WiFi Access Points.",
    "forks_count": 35,
    "html_url": "https://github.com/sensepost/berate_ap",
    "keywords": [
        "by_owner"
    ],
    "language": "Shell",
    "repo_name": "berate_ap",
    "repo_owner": "sensepost",
    "repotime": "2025-02-03, 11:46:09",
    "stargazers_count": 243,
    "watchers_count": 243
}
{
    "commits_count": 152,
    "date_started": "2010-01-09",
    "date_updated": "2025-02-27",
    "description": "A database resource control interface for Ruby that lets you avoid hard coding your passwords",
    "forks_count": 0,
    "html_url": "https://github.com/djberg96/dbi-dbrc",
    "keywords": [
        "hard coded password"
    ],
    "language": "Ruby",
    "repo_name": "dbi-dbrc",
    "repo_owner": "djberg96",
    "repotime": "2025-02-27, 06:40:48",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 4,
    "date_started": "2025-02-27",
    "date_updated": "2025-02-27",
    "description": "**Problem Statement:**   Uber faces challenges in managing rides, payments, drivers, and city-specific issues. To stay competitive and expand, it needs in-depth data analysis to address revenue leaks, driver performance, and high cancellation rates. This project uses SQL to explore operational data and uncover insights for improved efficiency.",
    "forks_count": 0,
    "html_url": "https://github.com/drish08/Uber-Data-Analysis",
    "keywords": [
        "address leak analysis"
    ],
    "language": "TSQL",
    "repo_name": "Uber-Data-Analysis",
    "repo_owner": "drish08",
    "repotime": "2025-02-27, 16:58:38",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 176,
    "date_started": "2015-05-28",
    "date_updated": "2025-02-24",
    "description": "HackSys Extreme Vulnerable Driver (HEVD) - Windows &amp;amp; Linux",
    "forks_count": 549,
    "html_url": "https://github.com/hacksysteam/HackSysExtremeVulnerableDriver",
    "keywords": [
        "vulnerability",
        "Windows uaf vulnerability",
        "uaf exploitation",
        "Windows uaf exploitation",
        "uaf vulnerability",
        "Windows uaf"
    ],
    "language": "C",
    "repo_name": "HackSysExtremeVulnerableDriver",
    "repo_owner": "hacksysteam",
    "repotime": "2025-02-24, 17:49:16",
    "stargazers_count": 2688,
    "watchers_count": 2688
}
{
    "commits_count": 51,
    "date_started": "2021-10-17",
    "date_updated": "2025-02-21",
    "description": "Consider  the  design  of  a  database  for  a  web  site  that  allow  people  to  buy  and  sell  a  cypto called PPS (see website testing.ppswap.org). Only registered users can buy and sell PPS. Each user is identified by a userid, which is an email, first name, last name, birthday, address (street number, street, city, state, and zip code), balance of PPS and balance of dollar.  Initially, both PPS and dollar balances are zero. A user can withdraw and deposit dollars. A special user root (this is the only user whose id is root and not an email) initially will have the whole supply of PPS, which is 1T. A user will sell and buy PPS only with this special user root (in real life, this special root might be just a smart contract). The price of the PPS is set to 1M/$ initially. For the simplicity of this project, we assume each buy will increase the price by a little: each dollar can buy 1 less PPS after each buy. In the same way, each sell will decrease the price a little bit:  each  d...",
    "forks_count": 5,
    "html_url": "https://github.com/jonschumaker/PPS_Project",
    "keywords": [
        "hard coded password"
    ],
    "language": "Java",
    "repo_name": "PPS_Project",
    "repo_owner": "jonschumaker",
    "repotime": "2025-02-21, 20:40:55",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 296,
    "date_started": "2022-09-03",
    "date_updated": "2025-02-17",
    "description": "Tests URLs for Local File Inclusion (LFI), Remote File Inclusion (RFI),   SQL injection (SQLi), and Cross Site Scripting (XSS), Server Side Template Injection (SSTI), and Open Redirects.",
    "forks_count": 19,
    "html_url": "https://github.com/ronin-rb/ronin-vulns",
    "keywords": [
        "local file inclusion",
        "cross-side-scripting"
    ],
    "language": "Ruby",
    "repo_name": "ronin-vulns",
    "repo_owner": "ronin-rb",
    "repotime": "2025-02-17, 13:24:05",
    "stargazers_count": 78,
    "watchers_count": 78
}
{
    "commits_count": 388,
    "date_started": "2018-08-11",
    "date_updated": "2025-02-03",
    "description": "Script for orchestrating mana rogue WiFi Access Points.",
    "forks_count": 35,
    "html_url": "https://github.com/sensepost/berate_ap",
    "keywords": [
        "by_owner"
    ],
    "language": "Shell",
    "repo_name": "berate_ap",
    "repo_owner": "sensepost",
    "repotime": "2025-02-03, 11:46:09",
    "stargazers_count": 243,
    "watchers_count": 243
}
