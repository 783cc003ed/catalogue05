{
    "commits_count": 2,
    "date_started": "2019-09-27",
    "date_updated": "2019-09-27",
    "description": "Import CSV.   ASP Core, SqlServer,  Dependency Injection,  This application import CSV files information into an SQL DataBase. The Origin of the data will be a folder located on C:\\CSV\\  Before import the data into the database the application will check:  If the file name format is correct,  If the date in the file name is valid,  duplicates,  discard any record with FirstName &amp;quot;John&amp;quot;.  During the process, the application will Log all possible error in formatting or truncation the file could have.",
    "forks_count": 0,
    "html_url": "https://github.com/cfabregas85/ImportCSV",
    "keywords": [
        "csv injection"
    ],
    "language": "C#",
    "repo_name": "ImportCSV",
    "repo_owner": "cfabregas85",
    "repotime": "2019-09-27, 07:42:32",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 31,
    "date_started": "2019-06-20",
    "date_updated": "2019-09-26",
    "description": "UIAccess UAC Bypass using token duplication and keyboard events",
    "forks_count": 10,
    "html_url": "https://github.com/rootm0s/UUB",
    "keywords": [
        "uac bypass"
    ],
    "language": "Python",
    "repo_name": "UUB",
    "repo_owner": "rootm0s",
    "repotime": "2019-09-26, 20:14:59",
    "stargazers_count": 27,
    "watchers_count": 27
}
{
    "commits_count": 2,
    "date_started": "2019-09-25",
    "date_updated": "2019-09-25",
    "description": "Proof of concept on how to  exploit insecure deserialization on NodeJS library to perform a RCE (Remote Code Execution)",
    "forks_count": 1,
    "html_url": "https://github.com/indrefi/Insecure-Deserialization-NodeJS-RCE",
    "keywords": [
        "remote code execution proof of concept",
        "rce proof of concept"
    ],
    "language": "JavaScript",
    "repo_name": "Insecure-Deserialization-NodeJS-RCE",
    "repo_owner": "indrefi",
    "repotime": "2019-09-25, 21:10:14",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 6,
    "date_started": "2019-08-24",
    "date_updated": "2019-09-23",
    "description": "The official exploit code for FusionPBX v4.4.8 Remote Code Execution CVE-2019-15029",
    "forks_count": 2,
    "html_url": "https://github.com/mhaskar/CVE-2019-15029",
    "keywords": [
        "remote code execution exploitation",
        "remote code execution exploit"
    ],
    "language": "Ruby",
    "repo_name": "CVE-2019-15029",
    "repo_owner": "mhaskar",
    "repotime": "2019-09-23, 16:39:08",
    "stargazers_count": 7,
    "watchers_count": 7
}
{
    "commits_count": 35,
    "date_started": "2016-12-24",
    "date_updated": "2019-09-22",
    "description": "Another web vulnerabilities scanner, this extension works on Chrome and Opera",
    "forks_count": 157,
    "html_url": "https://github.com/swisskyrepo/DamnWebScanner",
    "keywords": [
        "Chrome rce",
        "Chrome rce vulnerability",
        "lfi",
        "rce vulnerability"
    ],
    "language": "Python",
    "repo_name": "DamnWebScanner",
    "repo_owner": "swisskyrepo",
    "repotime": "2019-09-22, 16:11:49",
    "stargazers_count": 460,
    "watchers_count": 460
}
{
    "commits_count": 2,
    "date_started": "2019-09-21",
    "date_updated": "2019-09-21",
    "description": "Form submit event and validation this checks if the input is correct(turn green) or wrong turns red)",
    "forks_count": 0,
    "html_url": "https://github.com/B-H-M/Form-submit-event-and-validations",
    "keywords": [
        "wrong input validation"
    ],
    "language": "JavaScript",
    "repo_name": "Form-submit-event-and-validations",
    "repo_owner": "B-H-M",
    "repotime": "2019-09-21, 01:46:48",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 22,
    "date_started": "2019-09-13",
    "date_updated": "2019-09-20",
    "description": "1.          Specs: Backend: Laravel 5.6+  Frontend: Blade or Vue.js  Database: MySQL  2.          Task: ·         Write a migration for &amp;quot;authors&amp;quot; that consists(tartalmaz) of a name, age and address.  ·         Write a factory for &amp;quot;authors&amp;quot; and seed them with 10 rows of random data.  ·         Write a migration for &amp;quot;books&amp;quot; that consists of a name and the release date. An author can write one or more books.  ·         Write a factory for &amp;quot;books&amp;quot; and seed them with 30 rows of random data.  ·         Design a simple form in the frontend that makes it possible to insert a new author together with a new book and store it in the database.  ·         Create a button &amp;quot;Show Data&amp;quot; which will display all authors and their books. I want to be able to refresh the data after I inserted a new author.  ·         Validate the input client- and server-sided and inform the user in case of wrong inputs.",
    "forks_count": 0,
    "html_url": "https://github.com/GyarmatiAdam/sportradar_exercise",
    "keywords": [
        "wrong input validation"
    ],
    "language": "PHP",
    "repo_name": "sportradar_exercise",
    "repo_owner": "GyarmatiAdam",
    "repotime": "2019-09-20, 09:28:39",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 107,
    "date_started": "2019-09-20",
    "date_updated": "2019-09-20",
    "description": "Writing 50 POC's for exploits from scratch as practice for OSCE, all BOF. Including: Vannila, SEH, egghunters, ASLR/DEP/NX bypassing",
    "forks_count": 1,
    "html_url": "https://github.com/catsmells/Windows-Exploit-Development-practice",
    "keywords": [
        "dep bypass",
        "Win aslr bypass",
        "Windows aslr bypass exploitation",
        "Windows aslr bypass",
        "aslr bypass exploitation",
        "Win aslr bypass exploit",
        "aslr bypass",
        "Windows aslr bypass exploit",
        "aslr bypass poc",
        "aslr bypass exploit",
        "Windows aslr bypass poc",
        "Win aslr bypass poc",
        "Win aslr bypass exploitation"
    ],
    "language": "Python",
    "repo_name": "Windows-Exploit-Development-practice",
    "repo_owner": "catsmells",
    "repotime": "2019-09-20, 02:31:30",
    "stargazers_count": 8,
    "watchers_count": 8
}
{
    "commits_count": 18,
    "date_started": "2016-03-05",
    "date_updated": "2019-09-17",
    "description": "实时上线的 XSS 盲打平台",
    "forks_count": 197,
    "html_url": "https://github.com/AntSwordProject/ant",
    "keywords": [
        "xss"
    ],
    "language": "JavaScript",
    "repo_name": "ant",
    "repo_owner": "AntSwordProject",
    "repotime": "2019-09-17, 13:44:02",
    "stargazers_count": 476,
    "watchers_count": 476
}
{
    "commits_count": 2,
    "date_started": "2019-06-05",
    "date_updated": "2019-09-09",
    "description": "PHP server side script processes info to the SQL database in cloud.  Added security validations, prevented undefined index errors, cross scripting.",
    "forks_count": 0,
    "html_url": "https://github.com/barecool99/Chollerton-Tearooms",
    "keywords": [
        "cross-side-scripting"
    ],
    "language": "HTML",
    "repo_name": "Chollerton-Tearooms",
    "repo_owner": "barecool99",
    "repotime": "2019-09-09, 11:03:01",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 11,
    "date_started": "2019-08-27",
    "date_updated": "2019-09-02",
    "description": "I created the python script to bypass UAC to get system shell .",
    "forks_count": 33,
    "html_url": "https://github.com/sailay1996/Fileless_UAC_bypass_WSReset",
    "keywords": [
        "uac bypass"
    ],
    "language": "Python",
    "repo_name": "Fileless_UAC_bypass_WSReset",
    "repo_owner": "sailay1996",
    "repotime": "2019-09-02, 12:28:43",
    "stargazers_count": 122,
    "watchers_count": 122
}
{
    "commits_count": 211,
    "date_started": "2019-09-02",
    "date_updated": "2019-09-01",
    "description": "Node.js is an open-source, cross-platform JavaScript run-time environment that executes JavaScript code outside of a browser. Node.js lets developers use JavaScript to write command line tools and for server-side scripting—running scripts server-side to produce dynamic web page content before the page is sent to the user's web browser. Consequently, Node.js represents a &amp;quot;JavaScript everywhere&amp;quot; paradigm,[7] unifying web application development around a single programming language, rather than different languages for server side and client side scripts. ",
    "forks_count": 0,
    "html_url": "https://github.com/GhettoGeek/Node.js",
    "keywords": [
        "cross-side-scripting"
    ],
    "language": "JavaScript",
    "repo_name": "Node.js",
    "repo_owner": "GhettoGeek",
    "repotime": "2019-09-01, 23:45:46",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 45,
    "date_started": "2019-05-19",
    "date_updated": "2019-09-01",
    "description": "XSSCon: Simple XSS Scanner tool",
    "forks_count": 66,
    "html_url": "https://github.com/menkrep1337/XSSCon",
    "keywords": [
        "xss"
    ],
    "language": "Python",
    "repo_name": "XSSCon",
    "repo_owner": "menkrep1337",
    "repotime": "2019-09-01, 09:32:18",
    "stargazers_count": 219,
    "watchers_count": 219
}
