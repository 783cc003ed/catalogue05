{
    "commits_count": 1,
    "date_started": "2022-06-30",
    "date_updated": "2022-06-30",
    "description": "Open in app Get started   ITNEXT Published in ITNEXT  You have 2 free member-only stories left this month. Sign up for Medium and get an extra one  Kush Kush Follow Apr 15, 2021  · 7 min read ·  Listen   Save      How you can Control your Android Device with Python Photo by Caspar Camille Rubin on Unsplash Photo by Caspar Camille Rubin on Unsplash Introduction A while back I was thinking of ways in which I could annoy my friends by spamming them with messages for a few minutes, and while doing some research I came across the Android Debug Bridge. In this quick guide I will show you how you can interface with it using Python and how to create 2 quick scripts.  The ADB (Android Debug Bridge) is a command line tool (CLI) which can be used to control and communicate with an Android device. You can do many things such as install apps, debug apps, find hidden features and use a shell to interface with the device directly. To enable the ADB, your device must firstly have Developer Options unl...",
    "forks_count": 15,
    "html_url": "https://github.com/Masudbro94/python-hacked-mobile-phone-",
    "keywords": [
        "Windows use after free"
    ],
    "language": null,
    "repo_name": "python-hacked-mobile-phone-",
    "repo_owner": "Masudbro94",
    "repotime": "2022-06-30, 15:10:26",
    "stargazers_count": 93,
    "watchers_count": 93
}
{
    "commits_count": 18,
    "date_started": "2021-12-11",
    "date_updated": "2022-06-28",
    "description": "Log4Shell Zero-Day Exploit Proof of Concept",
    "forks_count": 11,
    "html_url": "https://github.com/o7-Fire/Log4Shell",
    "keywords": [
        "rce proof of concept",
        "zero-day proof of concept",
        "zero-day exploitation",
        "zero-day exploit"
    ],
    "language": "Java",
    "repo_name": "Log4Shell",
    "repo_owner": "o7-Fire",
    "repotime": "2022-06-28, 03:20:20",
    "stargazers_count": 24,
    "watchers_count": 24
}
{
    "commits_count": 62,
    "date_started": "2022-06-27",
    "date_updated": "2022-06-27",
    "description": "Unicode visual spoofing demo program showcasing the vulnerability and a patch.",
    "forks_count": 0,
    "html_url": "https://github.com/rohankhayech/UnicodeVisualSpoofing",
    "keywords": [
        "spoofing vulnerability"
    ],
    "language": "Java",
    "repo_name": "UnicodeVisualSpoofing",
    "repo_owner": "rohankhayech",
    "repotime": "2022-06-27, 23:33:45",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 24,
    "date_started": "2021-05-03",
    "date_updated": "2022-06-23",
    "description": "Codes for ICLR 21 paper: Neural Approximate Sufficient Statistics for Implicit Models",
    "forks_count": 8,
    "html_url": "https://github.com/cyz-ai/neural-approx-ss-lfi",
    "keywords": [
        "lfi"
    ],
    "language": "Jupyter Notebook",
    "repo_name": "neural-approx-ss-lfi",
    "repo_owner": "cyz-ai",
    "repotime": "2022-06-23, 19:52:35",
    "stargazers_count": 19,
    "watchers_count": 19
}
{
    "commits_count": 8,
    "date_started": "2022-06-18",
    "date_updated": "2022-06-19",
    "description": "Windows Privilege Escalation  Learn the fundamentals of Windows privilege escalation techniques.",
    "forks_count": 0,
    "html_url": "https://github.com/r1skkam/TryHackMe-Windows-Privilege-Escalation",
    "keywords": [
        "Windows escalation of privileges",
        "Win escalation of privileges"
    ],
    "language": null,
    "repo_name": "TryHackMe-Windows-Privilege-Escalation",
    "repo_owner": "r1skkam",
    "repotime": "2022-06-19, 23:08:19",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2022-06-19",
    "date_updated": "2022-06-19",
    "description": "NEW! NEW! !!🎁   🔥SMARTMULA AGENCIES SUMMARY🔥 🪀Register and ACTIVATE Your Account With 🇰🇪KSH 500 🥏   💥💥 HOW YOU WILL MAKE MONEY💥💥         ♨️1.AFFILIATE PROGRAM♨️   After Activation You get your referral link and use to invite others and EARN as follows :-                (i)Level 1 -KSH 250🎯                (ii)Level 2 -KSH 100🎯🎯                 (iii)Level 3 -KSH 50🎯🎯🎯 -Bonuses will be awarded to users with Top Earnings from this program.       🛑🛑2. YOUTUBE VIDEOS🛑🛑 Earn Real cash for Watching YOUTUBE Videos Uploaded on Our Platform Which will be available occasionally for all users. Youtubers can also build their Youtube channels and get more views from our program which enables  users to buy Youtube VIEWS , SUBSCRIBERS and LIKES.         3. 🎱WELCOME SPIN AND WIN🎱 We deliver  FREE bonus Spin for new users after account activation which maximum win is KSH1000             4🔮PAID AD-LINK CLICKS🔮 This is an online advertising model in where users are paid for clicking on the ad-links     5.🎾...",
    "forks_count": 0,
    "html_url": "https://github.com/Isaacbillion/Hi-dear-.-I-am-Isaac-waweru-by-names.-WE-SHARE-A-COMMON-GROUP-IN-WHATSAPP-Interested-in-makin",
    "keywords": [
        "Win use after free"
    ],
    "language": null,
    "repo_name": "Hi-dear-.-I-am-Isaac-waweru-by-names.-WE-SHARE-A-COMMON-GROUP-IN-WHATSAPP-Interested-in-makin",
    "repo_owner": "Isaacbillion",
    "repotime": "2022-06-19, 15:27:30",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 9,
    "date_started": "2022-06-11",
    "date_updated": "2022-06-18",
    "description": "The greatest wish hole in the world.",
    "forks_count": 1,
    "html_url": "https://github.com/Advanced-use/Vulnerability-0day-",
    "keywords": [
        "0day vulnerability"
    ],
    "language": "HTML",
    "repo_name": "Vulnerability-0day-",
    "repo_owner": "Advanced-use",
    "repotime": "2022-06-18, 18:04:30",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 5,
    "date_started": "2022-06-14",
    "date_updated": "2022-06-16",
    "description": "File Inclusion:  This room introduces file inclusion vulnerabilities, including Local File Inclusion (LFI), Remote File Inclusion (RFI), and directory traversal.",
    "forks_count": 0,
    "html_url": "https://github.com/r1skkam/TryHackMe-File-Inclusion",
    "keywords": [
        "directory traversal vulnerability",
        "local file inclusion"
    ],
    "language": null,
    "repo_name": "TryHackMe-File-Inclusion",
    "repo_owner": "r1skkam",
    "repotime": "2022-06-16, 23:12:25",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 1,
    "date_started": "2022-06-15",
    "date_updated": "2022-06-16",
    "description": "Instructions: How to Run? After you finish downloading the project, unzip the project file and head over to your XAMPP directory. There you’ll find a folder naming “htdocs”. Inside the “htdocs” folder, paste the project folder (not the .zip one, but the extracted one). Open your favorite browser; we recommend using Google Chrome or Mozilla Firefox. Then, go to URL “http://localhost/phpmyadmin“. Create a Database with a name that is provided inside the “01 LOGIN DETAILS &amp;amp; PROJECT INFO.txt”. Click on the “Import” tab and choose the database file (.sql) which is provided under the folder naming “DATABASE FILE”. After setting up all these, go to URL “http://localhost/[ ENTER_PROJECT_FOLDER_NAME_HERE ]“ All the login details are provided inside the project folder, check that out and enter in order to use it. And there you have it, a full setup of the Online Exam System Project in PHP. For this particular PHP project, PHP Version 5.6.3 or 7.4.12 is required because the project might not ...",
    "forks_count": 0,
    "html_url": "https://github.com/pravinpandey1410/online_exam_system",
    "keywords": [
        "Chrome use after free"
    ],
    "language": "PHP",
    "repo_name": "online_exam_system",
    "repo_owner": "pravinpandey1410",
    "repotime": "2022-06-16, 01:13:00",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 5,
    "date_started": "2022-06-15",
    "date_updated": "2022-06-15",
    "description": "A brief summary of recent Linux privilege escalation exploit. ",
    "forks_count": 0,
    "html_url": "https://github.com/hxlxmjxbbxs/TheDirtyPipeExploit",
    "keywords": [
        "escalation of privileges exploitation",
        "escalation of privileges exploit"
    ],
    "language": "C",
    "repo_name": "TheDirtyPipeExploit",
    "repo_owner": "hxlxmjxbbxs",
    "repotime": "2022-06-15, 01:45:09",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 124,
    "date_started": "2022-04-19",
    "date_updated": "2022-06-14",
    "description": "🚀 一款为了学习go而诞生的漏洞利用工具",
    "forks_count": 53,
    "html_url": "https://github.com/SummerSec/SpringExploit",
    "keywords": [
        "rce exploit"
    ],
    "language": "Go",
    "repo_name": "SpringExploit",
    "repo_owner": "SummerSec",
    "repotime": "2022-06-14, 12:28:15",
    "stargazers_count": 447,
    "watchers_count": 447
}
{
    "commits_count": 5,
    "date_started": "2021-10-24",
    "date_updated": "2022-06-12",
    "description": "Sleirsgoevy: PoC for the FontFaceSet vulnerability, which was wrongly classified as a use-after-free. Works only on PC for now. Please check if this prints &amp;quot;failed to guess...&amp;quot; for you. Especially interested in reports from 9.00.",
    "forks_count": 2,
    "html_url": "https://github.com/kmeps4/900Test",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "HTML",
    "repo_name": "900Test",
    "repo_owner": "kmeps4",
    "repotime": "2022-06-12, 17:55:07",
    "stargazers_count": 6,
    "watchers_count": 6
}
{
    "commits_count": 56,
    "date_started": "2014-11-08",
    "date_updated": "2022-06-11",
    "description": "Small tool to package javascript into a valid image file.",
    "forks_count": 118,
    "html_url": "https://github.com/jklmnn/imagejs",
    "keywords": [
        "xss"
    ],
    "language": "C",
    "repo_name": "imagejs",
    "repo_owner": "jklmnn",
    "repotime": "2022-06-11, 21:18:44",
    "stargazers_count": 903,
    "watchers_count": 903
}
{
    "commits_count": 2,
    "date_started": "2022-06-07",
    "date_updated": "2022-06-07",
    "description": "According to all known laws of aviation, there is no way that a bee should be able to fly. Its wings are too small to get its fat little body off the ground. The bee, of course, flies anyway. Because bees don’t care what humans think is impossible.” SEQ. 75 - “INTRO TO BARRY” INT. BENSON HOUSE - DAY ANGLE ON: Sneakers on the ground. Camera PANS UP to reveal BARRY BENSON’S BEDROOM ANGLE ON: Barry’s hand flipping through different sweaters in his closet. BARRY Yellow black, yellow black, yellow black, yellow black, yellow black, yellow black...oohh, black and yellow... ANGLE ON: Barry wearing the sweater he picked, looking in the mirror. BARRY (CONT’D) Yeah, let’s shake it up a little. He picks the black and yellow one. He then goes to the sink, takes the top off a CONTAINER OF HONEY, and puts some honey into his hair. He squirts some in his mouth and gargles. Then he takes the lid off the bottle, and rolls some on like deodorant. CUT TO: INT. BENSON HOUSE KITCHEN - CONTINUOUS Barry’s mo...",
    "forks_count": 26,
    "html_url": "https://github.com/danderfer/Comp_Sci_Sem_2",
    "keywords": [
        "Windows use after free",
        "Win use after free",
        "Win use after free exploit",
        "Windows use after free exploit",
        "use after free exploitation",
        "Windows use after free exploitation",
        "use after free exploit",
        "Win use after free exploitation"
    ],
    "language": "Python",
    "repo_name": "Comp_Sci_Sem_2",
    "repo_owner": "danderfer",
    "repotime": "2022-06-07, 20:31:10",
    "stargazers_count": 125,
    "watchers_count": 125
}
{
    "commits_count": 3,
    "date_started": "2022-06-06",
    "date_updated": "2022-06-06",
    "description": "Design a class Employee that adheres to the principles of encapsulation with the following requirements requires employee number(int), employee name (first name and last name string), years of service(int), anual salary (decimal) department name(string), hired date(Datetime) all upon creation employee number, salary, name and department will need to be valid and years of service and hired date can start from zero and get the value of today if not provided The employee class exhibits the following behaviours Change name Change department Increase year of service 10% Salary increase 5% Salary increase Terminate Print Status Get Current Salary The employee class exposes the following properties Fullname (first and last name) Hired Date (format YYYY-MM-DD) Years of Service Department name The following rules will need to be follow First name and last name can not be empty at any time Years of service can not be negative Hired date can not be in the future Department can only be [Management...",
    "forks_count": 0,
    "html_url": "https://github.com/GithubASamali/exerciceCOMit-",
    "keywords": [
        "empty string password"
    ],
    "language": null,
    "repo_name": "exerciceCOMit-",
    "repo_owner": "GithubASamali",
    "repotime": "2022-06-06, 16:05:16",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 3,
    "date_started": "2022-06-06",
    "date_updated": "2022-06-06",
    "description": "Badminton Center Management System allows SQL Injection via parameter 'id' in /tss/admin/categories/manage_category.php. Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.",
    "forks_count": 0,
    "html_url": "https://github.com/ykosan1/Simple-Task-Scheduling-System-id-SQL-Injection-Unauthenticated",
    "keywords": [
        "unauthenticated attacker"
    ],
    "language": null,
    "repo_name": "Simple-Task-Scheduling-System-id-SQL-Injection-Unauthenticated",
    "repo_owner": "ykosan1",
    "repotime": "2022-06-06, 20:22:21",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 7,
    "date_started": "2022-06-06",
    "date_updated": "2022-06-06",
    "description": "This is a workaround that should secure machines from the Follina zero-day exploit. (According to Microsoft's documentation)",
    "forks_count": 0,
    "html_url": "https://github.com/devinSchminke/Follina-workaround-automation",
    "keywords": [
        "Microsoft zero-day exploit",
        "Microsoft zero-day exploitation",
        "Microsoft zero-day",
        "zero-day exploitation",
        "zero-day exploit"
    ],
    "language": "Python",
    "repo_name": "Follina-workaround-automation",
    "repo_owner": "devinSchminke",
    "repotime": "2022-06-06, 09:02:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 41,
    "date_started": "2020-12-12",
    "date_updated": "2022-06-06",
    "description": "GUI SQL Injection scannig tool",
    "forks_count": 12,
    "html_url": "https://github.com/tariqhawis/injectbot",
    "keywords": [
        "sql injection"
    ],
    "language": "PHP",
    "repo_name": "injectbot",
    "repo_owner": "tariqhawis",
    "repotime": "2022-06-06, 06:46:45",
    "stargazers_count": 31,
    "watchers_count": 31
}
{
    "commits_count": 3,
    "date_started": "2022-06-02",
    "date_updated": "2022-06-02",
    "description": "In this problem, you will be given a dataset that records the house prices of 9,761 houses in King County, Washington, US. The house prices are recorded along with some other attributes like - area of the house, number of bedrooms, number of bathrooms, etc. You are required to do the following tasks: 1) Question the data - Understand the variables very carefully and formulate your questions/hypothesis. (Note that these are just your initial hypothesis which may or may not seem to be true after the EDA step). 2) EDA - explore the dataset very carefully. Do univariate analysis and bivariate analysis by choosing appropriate graphs, charts and descriptive measures. Report the surprising elements (i.e. the one which you believed would be true in step 1 did not turn out t be true, or a result that was beyond your expectation, etc.). 3) Initial model fitting step - FIt a couple of decision tree models by considering different sets of predictors on the training dataset. Argue the reasons for c...",
    "forks_count": 0,
    "html_url": "https://github.com/teja-ai9/House-Price-Prediction-in-Kings-County-USA",
    "keywords": [
        "use after free analysis"
    ],
    "language": "Jupyter Notebook",
    "repo_name": "House-Price-Prediction-in-Kings-County-USA",
    "repo_owner": "teja-ai9",
    "repotime": "2022-06-02, 12:34:41",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 104,
    "date_started": "2020-08-24",
    "date_updated": "2022-06-01",
    "description": "XSScope is one of the most powerful and advanced GUI Framework for Modern Browser exploitation via XSS.",
    "forks_count": 79,
    "html_url": "https://github.com/kleiton0x00/XSScope",
    "keywords": [
        "xss"
    ],
    "language": "HTML",
    "repo_name": "XSScope",
    "repo_owner": "kleiton0x00",
    "repotime": "2022-06-01, 19:24:08",
    "stargazers_count": 315,
    "watchers_count": 315
}
{
    "commits_count": 1,
    "date_started": "2022-06-30",
    "date_updated": "2022-06-30",
    "description": "Open in app Get started   ITNEXT Published in ITNEXT  You have 2 free member-only stories left this month. Sign up for Medium and get an extra one  Kush Kush Follow Apr 15, 2021  · 7 min read ·  Listen   Save      How you can Control your Android Device with Python Photo by Caspar Camille Rubin on Unsplash Photo by Caspar Camille Rubin on Unsplash Introduction A while back I was thinking of ways in which I could annoy my friends by spamming them with messages for a few minutes, and while doing some research I came across the Android Debug Bridge. In this quick guide I will show you how you can interface with it using Python and how to create 2 quick scripts.  The ADB (Android Debug Bridge) is a command line tool (CLI) which can be used to control and communicate with an Android device. You can do many things such as install apps, debug apps, find hidden features and use a shell to interface with the device directly. To enable the ADB, your device must firstly have Developer Options unl...",
    "forks_count": 15,
    "html_url": "https://github.com/Masudbro94/python-hacked-mobile-phone-",
    "keywords": [
        "Windows use after free"
    ],
    "language": null,
    "repo_name": "python-hacked-mobile-phone-",
    "repo_owner": "Masudbro94",
    "repotime": "2022-06-30, 15:10:26",
    "stargazers_count": 95,
    "watchers_count": 95
}
{
    "commits_count": 18,
    "date_started": "2021-12-11",
    "date_updated": "2022-06-28",
    "description": "Log4Shell Zero-Day Exploit Proof of Concept",
    "forks_count": 11,
    "html_url": "https://github.com/o7-Fire/Log4Shell",
    "keywords": [
        "rce proof of concept",
        "zero-day proof of concept",
        "zero-day exploitation",
        "zero-day exploit"
    ],
    "language": "Java",
    "repo_name": "Log4Shell",
    "repo_owner": "o7-Fire",
    "repotime": "2022-06-28, 03:20:20",
    "stargazers_count": 24,
    "watchers_count": 24
}
{
    "commits_count": 62,
    "date_started": "2022-06-27",
    "date_updated": "2022-06-27",
    "description": "Unicode visual spoofing demo program showcasing the vulnerability and a patch.",
    "forks_count": 0,
    "html_url": "https://github.com/rohankhayech/UnicodeVisualSpoofing",
    "keywords": [
        "spoofing vulnerability"
    ],
    "language": "Java",
    "repo_name": "UnicodeVisualSpoofing",
    "repo_owner": "rohankhayech",
    "repotime": "2022-06-27, 23:33:45",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 24,
    "date_started": "2021-05-03",
    "date_updated": "2022-06-23",
    "description": "Codes for ICLR 21 paper: Neural Approximate Sufficient Statistics for Implicit Models",
    "forks_count": 8,
    "html_url": "https://github.com/cyz-ai/neural-approx-ss-lfi",
    "keywords": [
        "lfi"
    ],
    "language": "Jupyter Notebook",
    "repo_name": "neural-approx-ss-lfi",
    "repo_owner": "cyz-ai",
    "repotime": "2022-06-23, 19:52:35",
    "stargazers_count": 19,
    "watchers_count": 19
}
{
    "commits_count": 8,
    "date_started": "2022-06-18",
    "date_updated": "2022-06-19",
    "description": "Windows Privilege Escalation  Learn the fundamentals of Windows privilege escalation techniques.",
    "forks_count": 0,
    "html_url": "https://github.com/r1skkam/TryHackMe-Windows-Privilege-Escalation",
    "keywords": [
        "Windows escalation of privileges",
        "Win escalation of privileges"
    ],
    "language": null,
    "repo_name": "TryHackMe-Windows-Privilege-Escalation",
    "repo_owner": "r1skkam",
    "repotime": "2022-06-19, 23:08:19",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2022-06-19",
    "date_updated": "2022-06-19",
    "description": "NEW! NEW! !!🎁   🔥SMARTMULA AGENCIES SUMMARY🔥 🪀Register and ACTIVATE Your Account With 🇰🇪KSH 500 🥏   💥💥 HOW YOU WILL MAKE MONEY💥💥         ♨️1.AFFILIATE PROGRAM♨️   After Activation You get your referral link and use to invite others and EARN as follows :-                (i)Level 1 -KSH 250🎯                (ii)Level 2 -KSH 100🎯🎯                 (iii)Level 3 -KSH 50🎯🎯🎯 -Bonuses will be awarded to users with Top Earnings from this program.       🛑🛑2. YOUTUBE VIDEOS🛑🛑 Earn Real cash for Watching YOUTUBE Videos Uploaded on Our Platform Which will be available occasionally for all users. Youtubers can also build their Youtube channels and get more views from our program which enables  users to buy Youtube VIEWS , SUBSCRIBERS and LIKES.         3. 🎱WELCOME SPIN AND WIN🎱 We deliver  FREE bonus Spin for new users after account activation which maximum win is KSH1000             4🔮PAID AD-LINK CLICKS🔮 This is an online advertising model in where users are paid for clicking on the ad-links     5.🎾...",
    "forks_count": 0,
    "html_url": "https://github.com/Isaacbillion/Hi-dear-.-I-am-Isaac-waweru-by-names.-WE-SHARE-A-COMMON-GROUP-IN-WHATSAPP-Interested-in-makin",
    "keywords": [
        "Win use after free"
    ],
    "language": null,
    "repo_name": "Hi-dear-.-I-am-Isaac-waweru-by-names.-WE-SHARE-A-COMMON-GROUP-IN-WHATSAPP-Interested-in-makin",
    "repo_owner": "Isaacbillion",
    "repotime": "2022-06-19, 15:27:30",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 9,
    "date_started": "2022-06-11",
    "date_updated": "2022-06-18",
    "description": "The greatest wish hole in the world.",
    "forks_count": 1,
    "html_url": "https://github.com/Advanced-use/Vulnerability-0day-",
    "keywords": [
        "0day vulnerability"
    ],
    "language": "HTML",
    "repo_name": "Vulnerability-0day-",
    "repo_owner": "Advanced-use",
    "repotime": "2022-06-18, 18:04:30",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 5,
    "date_started": "2022-06-14",
    "date_updated": "2022-06-16",
    "description": "File Inclusion:  This room introduces file inclusion vulnerabilities, including Local File Inclusion (LFI), Remote File Inclusion (RFI), and directory traversal.",
    "forks_count": 0,
    "html_url": "https://github.com/r1skkam/TryHackMe-File-Inclusion",
    "keywords": [
        "directory traversal vulnerability",
        "local file inclusion"
    ],
    "language": null,
    "repo_name": "TryHackMe-File-Inclusion",
    "repo_owner": "r1skkam",
    "repotime": "2022-06-16, 23:12:25",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 1,
    "date_started": "2022-06-15",
    "date_updated": "2022-06-16",
    "description": "Instructions: How to Run? After you finish downloading the project, unzip the project file and head over to your XAMPP directory. There you’ll find a folder naming “htdocs”. Inside the “htdocs” folder, paste the project folder (not the .zip one, but the extracted one). Open your favorite browser; we recommend using Google Chrome or Mozilla Firefox. Then, go to URL “http://localhost/phpmyadmin“. Create a Database with a name that is provided inside the “01 LOGIN DETAILS &amp;amp; PROJECT INFO.txt”. Click on the “Import” tab and choose the database file (.sql) which is provided under the folder naming “DATABASE FILE”. After setting up all these, go to URL “http://localhost/[ ENTER_PROJECT_FOLDER_NAME_HERE ]“ All the login details are provided inside the project folder, check that out and enter in order to use it. And there you have it, a full setup of the Online Exam System Project in PHP. For this particular PHP project, PHP Version 5.6.3 or 7.4.12 is required because the project might not ...",
    "forks_count": 0,
    "html_url": "https://github.com/pravinpandey1410/online_exam_system",
    "keywords": [
        "Chrome use after free"
    ],
    "language": "PHP",
    "repo_name": "online_exam_system",
    "repo_owner": "pravinpandey1410",
    "repotime": "2022-06-16, 01:13:00",
    "stargazers_count": 2,
    "watchers_count": 2
}
{
    "commits_count": 5,
    "date_started": "2022-06-15",
    "date_updated": "2022-06-15",
    "description": "A brief summary of recent Linux privilege escalation exploit. ",
    "forks_count": 0,
    "html_url": "https://github.com/hxlxmjxbbxs/TheDirtyPipeExploit",
    "keywords": [
        "escalation of privileges exploitation",
        "escalation of privileges exploit"
    ],
    "language": "C",
    "repo_name": "TheDirtyPipeExploit",
    "repo_owner": "hxlxmjxbbxs",
    "repotime": "2022-06-15, 01:45:09",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 124,
    "date_started": "2022-04-19",
    "date_updated": "2022-06-14",
    "description": "🚀 一款为了学习go而诞生的漏洞利用工具",
    "forks_count": 53,
    "html_url": "https://github.com/SummerSec/SpringExploit",
    "keywords": [
        "rce exploit"
    ],
    "language": "Go",
    "repo_name": "SpringExploit",
    "repo_owner": "SummerSec",
    "repotime": "2022-06-14, 12:28:15",
    "stargazers_count": 447,
    "watchers_count": 447
}
{
    "commits_count": 5,
    "date_started": "2021-10-24",
    "date_updated": "2022-06-12",
    "description": "Sleirsgoevy: PoC for the FontFaceSet vulnerability, which was wrongly classified as a use-after-free. Works only on PC for now. Please check if this prints &amp;quot;failed to guess...&amp;quot; for you. Especially interested in reports from 9.00.",
    "forks_count": 2,
    "html_url": "https://github.com/kmeps4/900Test",
    "keywords": [
        "use after free vulnerability"
    ],
    "language": "HTML",
    "repo_name": "900Test",
    "repo_owner": "kmeps4",
    "repotime": "2022-06-12, 17:55:07",
    "stargazers_count": 6,
    "watchers_count": 6
}
{
    "commits_count": 56,
    "date_started": "2014-11-08",
    "date_updated": "2022-06-11",
    "description": "Small tool to package javascript into a valid image file.",
    "forks_count": 118,
    "html_url": "https://github.com/jklmnn/imagejs",
    "keywords": [
        "xss"
    ],
    "language": "C",
    "repo_name": "imagejs",
    "repo_owner": "jklmnn",
    "repotime": "2022-06-11, 21:18:44",
    "stargazers_count": 903,
    "watchers_count": 903
}
{
    "commits_count": 2,
    "date_started": "2022-06-07",
    "date_updated": "2022-06-07",
    "description": "According to all known laws of aviation, there is no way that a bee should be able to fly. Its wings are too small to get its fat little body off the ground. The bee, of course, flies anyway. Because bees don’t care what humans think is impossible.” SEQ. 75 - “INTRO TO BARRY” INT. BENSON HOUSE - DAY ANGLE ON: Sneakers on the ground. Camera PANS UP to reveal BARRY BENSON’S BEDROOM ANGLE ON: Barry’s hand flipping through different sweaters in his closet. BARRY Yellow black, yellow black, yellow black, yellow black, yellow black, yellow black...oohh, black and yellow... ANGLE ON: Barry wearing the sweater he picked, looking in the mirror. BARRY (CONT’D) Yeah, let’s shake it up a little. He picks the black and yellow one. He then goes to the sink, takes the top off a CONTAINER OF HONEY, and puts some honey into his hair. He squirts some in his mouth and gargles. Then he takes the lid off the bottle, and rolls some on like deodorant. CUT TO: INT. BENSON HOUSE KITCHEN - CONTINUOUS Barry’s mo...",
    "forks_count": 26,
    "html_url": "https://github.com/danderfer/Comp_Sci_Sem_2",
    "keywords": [
        "Windows use after free",
        "Win use after free",
        "Win use after free exploit",
        "Windows use after free exploit",
        "use after free exploitation",
        "Windows use after free exploitation",
        "use after free exploit",
        "Win use after free exploitation"
    ],
    "language": "Python",
    "repo_name": "Comp_Sci_Sem_2",
    "repo_owner": "danderfer",
    "repotime": "2022-06-07, 20:31:10",
    "stargazers_count": 125,
    "watchers_count": 125
}
{
    "commits_count": 3,
    "date_started": "2022-06-06",
    "date_updated": "2022-06-06",
    "description": "Design a class Employee that adheres to the principles of encapsulation with the following requirements requires employee number(int), employee name (first name and last name string), years of service(int), anual salary (decimal) department name(string), hired date(Datetime) all upon creation employee number, salary, name and department will need to be valid and years of service and hired date can start from zero and get the value of today if not provided The employee class exhibits the following behaviours Change name Change department Increase year of service 10% Salary increase 5% Salary increase Terminate Print Status Get Current Salary The employee class exposes the following properties Fullname (first and last name) Hired Date (format YYYY-MM-DD) Years of Service Department name The following rules will need to be follow First name and last name can not be empty at any time Years of service can not be negative Hired date can not be in the future Department can only be [Management...",
    "forks_count": 0,
    "html_url": "https://github.com/GithubASamali/exerciceCOMit-",
    "keywords": [
        "empty string password"
    ],
    "language": null,
    "repo_name": "exerciceCOMit-",
    "repo_owner": "GithubASamali",
    "repotime": "2022-06-06, 16:05:16",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 3,
    "date_started": "2022-06-06",
    "date_updated": "2022-06-06",
    "description": "Badminton Center Management System allows SQL Injection via parameter 'id' in /tss/admin/categories/manage_category.php. Exploiting this issue could allow an attacker to compromise the application, access or modify data, or exploit latent vulnerabilities in the underlying database.",
    "forks_count": 0,
    "html_url": "https://github.com/ykosan1/Simple-Task-Scheduling-System-id-SQL-Injection-Unauthenticated",
    "keywords": [
        "unauthenticated attacker"
    ],
    "language": null,
    "repo_name": "Simple-Task-Scheduling-System-id-SQL-Injection-Unauthenticated",
    "repo_owner": "ykosan1",
    "repotime": "2022-06-06, 20:22:21",
    "stargazers_count": 1,
    "watchers_count": 1
}
{
    "commits_count": 7,
    "date_started": "2022-06-06",
    "date_updated": "2022-06-06",
    "description": "This is a workaround that should secure machines from the Follina zero-day exploit. (According to Microsoft's documentation)",
    "forks_count": 0,
    "html_url": "https://github.com/devinSchminke/Follina-workaround-automation",
    "keywords": [
        "Microsoft zero-day exploit",
        "Microsoft zero-day exploitation",
        "Microsoft zero-day",
        "zero-day exploitation",
        "zero-day exploit"
    ],
    "language": "Python",
    "repo_name": "Follina-workaround-automation",
    "repo_owner": "devinSchminke",
    "repotime": "2022-06-06, 09:02:20",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 41,
    "date_started": "2020-12-12",
    "date_updated": "2022-06-06",
    "description": "GUI SQL Injection scannig tool",
    "forks_count": 12,
    "html_url": "https://github.com/tariqhawis/injectbot",
    "keywords": [
        "sql injection"
    ],
    "language": "PHP",
    "repo_name": "injectbot",
    "repo_owner": "tariqhawis",
    "repotime": "2022-06-06, 06:46:45",
    "stargazers_count": 31,
    "watchers_count": 31
}
{
    "commits_count": 3,
    "date_started": "2022-06-02",
    "date_updated": "2022-06-02",
    "description": "In this problem, you will be given a dataset that records the house prices of 9,761 houses in King County, Washington, US. The house prices are recorded along with some other attributes like - area of the house, number of bedrooms, number of bathrooms, etc. You are required to do the following tasks: 1) Question the data - Understand the variables very carefully and formulate your questions/hypothesis. (Note that these are just your initial hypothesis which may or may not seem to be true after the EDA step). 2) EDA - explore the dataset very carefully. Do univariate analysis and bivariate analysis by choosing appropriate graphs, charts and descriptive measures. Report the surprising elements (i.e. the one which you believed would be true in step 1 did not turn out t be true, or a result that was beyond your expectation, etc.). 3) Initial model fitting step - FIt a couple of decision tree models by considering different sets of predictors on the training dataset. Argue the reasons for c...",
    "forks_count": 0,
    "html_url": "https://github.com/teja-ai9/House-Price-Prediction-in-Kings-County-USA",
    "keywords": [
        "use after free analysis"
    ],
    "language": "Jupyter Notebook",
    "repo_name": "House-Price-Prediction-in-Kings-County-USA",
    "repo_owner": "teja-ai9",
    "repotime": "2022-06-02, 12:34:41",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 104,
    "date_started": "2020-08-24",
    "date_updated": "2022-06-01",
    "description": "XSScope is one of the most powerful and advanced GUI Framework for Modern Browser exploitation via XSS.",
    "forks_count": 79,
    "html_url": "https://github.com/kleiton0x00/XSScope",
    "keywords": [
        "xss"
    ],
    "language": "HTML",
    "repo_name": "XSScope",
    "repo_owner": "kleiton0x00",
    "repotime": "2022-06-01, 19:24:08",
    "stargazers_count": 315,
    "watchers_count": 315
}
