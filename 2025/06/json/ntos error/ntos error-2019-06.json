{
    "commits_count": 52,
    "date_started": "2019-11-04",
    "date_updated": "2019-06-29",
    "description": "Path Traversal to Traversal Brute with 35,000 ( 35K ) payloads",
    "forks_count": 0,
    "html_url": "https://github.com/marciopocebon/Attackpath",
    "keywords": [
        "path traversal attack"
    ],
    "language": null,
    "repo_name": "Attackpath",
    "repo_owner": "marciopocebon",
    "repotime": "2019-06-29, 16:08:51",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2019-06-26",
    "date_updated": "2019-06-25",
    "description": "Server and avi file to exploit FFmpeg HLS parse",
    "forks_count": 9,
    "html_url": "https://github.com/0xcoyote/FFmpeg-HLS-SSRF",
    "keywords": [
        "ssrf"
    ],
    "language": "Python",
    "repo_name": "FFmpeg-HLS-SSRF",
    "repo_owner": "0xcoyote",
    "repotime": "2019-06-25, 23:21:22",
    "stargazers_count": 21,
    "watchers_count": 21
}
{
    "commits_count": 26,
    "date_started": "2016-05-27",
    "date_updated": "2019-06-21",
    "description": "利用XSS入侵内网(Use XSS automation Invade intranet)",
    "forks_count": 68,
    "html_url": "https://github.com/BlackHole1/WebRtcXSS",
    "keywords": [
        "xss"
    ],
    "language": "PHP",
    "repo_name": "WebRtcXSS",
    "repo_owner": "BlackHole1",
    "repotime": "2019-06-21, 13:33:44",
    "stargazers_count": 196,
    "watchers_count": 196
}
{
    "commits_count": 3,
    "date_started": "2019-06-13",
    "date_updated": "2019-06-17",
    "description": "&amp;&#35;35; Node.js &amp;amp; MySQL  &amp;&#35;35;&amp;&#35;35; Overview  In this activity, you'll be creating an Amazon-like storefront with the MySQL skills you learned this unit. The app will take in orders from customers and deplete stock from the store's inventory. As a bonus task, you can program your app to track product sales across your store's departments and then provide a summary of the highest-grossing departments in the store.  Make sure you save and require the MySQL and Inquirer npm packages in your homework files--your app will need them for data input and storage.  &amp;&#35;35;&amp;&#35;35; Submission Guide  Make sure you use the normal GitHub. Because this is a CLI App, there will be no need to deploy it to Heroku. This time, though, you need to include screenshots, a gif, and/or a video showing us that you got the app working with no bugs. You can include these screenshots or a link to a video in a `README.md` file.  * Include screenshots (or a video) of typical user flows through your application (for the...",
    "forks_count": 0,
    "html_url": "https://github.com/CaptainEFFF/bamazon",
    "keywords": [
        "Windows use after free"
    ],
    "language": "JavaScript",
    "repo_name": "bamazon",
    "repo_owner": "CaptainEFFF",
    "repotime": "2019-06-17, 19:44:24",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2019-06-13",
    "date_updated": "2019-06-13",
    "description": "    {   &amp;quot;releases&amp;quot;: {     &amp;quot;2.0.4&amp;quot;: [       &amp;quot;[Fixed] Refresh for Enterprise repositories did not handle API error querying branches - &amp;&#35;35;7713&amp;quot;,       &amp;quot;[Fixed] Missing \\&amp;quot;Discard all changes\\&amp;quot; context menu in Changes header - &amp;&#35;35;7696&amp;quot;,       &amp;quot;[Fixed] \\&amp;quot;Select all\\&amp;quot; keyboard shortcut not firing on Windows - &amp;&#35;35;7759&amp;quot;     ],     &amp;quot;2.0.4-beta1&amp;quot;: [       &amp;quot;[Fixed] Refresh for Enterprise repositories did not handle API error querying branches - &amp;&#35;35;7713&amp;quot;,       &amp;quot;[Fixed] Missing \\&amp;quot;Discard all changes\\&amp;quot; context menu in Changes header - &amp;&#35;35;7696&amp;quot;,       &amp;quot;[Fixed] \\&amp;quot;Select all\\&amp;quot; keyboard shortcut not firing on Windows - &amp;&#35;35;7759&amp;quot;     ],     &amp;quot;2.0.4-beta0&amp;quot;: [       &amp;quot;[Added] Extend crash reports with more information about application state for troubleshooting - &amp;&#35;35;7693&amp;quot;,       &amp;quot;[Fixed] Crash when attempting to update pull requests with part...",
    "forks_count": 30,
    "html_url": "https://github.com/klonnet23/helloy-word",
    "keywords": [
        "wrong input validation",
        "hard coded password"
    ],
    "language": null,
    "repo_name": "helloy-word",
    "repo_owner": "klonnet23",
    "repotime": "2019-06-13, 04:59:11",
    "stargazers_count": 56,
    "watchers_count": 56
}
{
    "commits_count": 4,
    "date_started": "2019-06-09",
    "date_updated": "2019-06-09",
    "description": "RCE through Microsoft.XMLDOM com object without touching disk",
    "forks_count": 0,
    "html_url": "https://github.com/ashr/COM-XSL-Load-InMem-DotNet",
    "keywords": [
        "Microsoft rce"
    ],
    "language": "C#",
    "repo_name": "COM-XSL-Load-InMem-DotNet",
    "repo_owner": "ashr",
    "repotime": "2019-06-09, 22:00:03",
    "stargazers_count": 7,
    "watchers_count": 7
}
{
    "commits_count": 84,
    "date_started": "2018-02-17",
    "date_updated": "2019-06-05",
    "description": "Keeping Twitter for macOS alive with code injection",
    "forks_count": 5,
    "html_url": "https://github.com/nakiostudio/TwitterX",
    "keywords": [
        "code injection"
    ],
    "language": "Objective-C",
    "repo_name": "TwitterX",
    "repo_owner": "nakiostudio",
    "repotime": "2019-06-05, 08:57:43",
    "stargazers_count": 187,
    "watchers_count": 187
}
{
    "commits_count": 10,
    "date_started": "2019-05-30",
    "date_updated": "2019-06-04",
    "description": "&amp;&#35;35; LIRI Bot  &amp;&#35;35;&amp;&#35;35;&amp;&#35;35; Overview  In this assignment, you will make LIRI. LIRI is like iPhone's SIRI. However, while SIRI is a Speech Interpretation and Recognition Interface, LIRI is a _Language_ Interpretation and Recognition Interface. LIRI will be a command line node app that takes in parameters and gives you back data.  &amp;&#35;35;&amp;&#35;35;&amp;&#35;35; Before You Begin  1. LIRI will search Spotify for songs, Bands in Town for concerts, and OMDB for movies.  2. Make a new GitHub repository called liri-node-app and clone it to your computer.  3. To retrieve the data that will power this app, you'll need to send requests using the `axios` package to the Bands in Town, Spotify and OMDB APIs. You'll find these Node packages crucial for your assignment.     * [Node-Spotify-API](https://www.npmjs.com/package/node-spotify-api)     * [Axios](https://www.npmjs.com/package/axios)       * You'll use Axios to grab data from the [OMDB API](http://www.omdbapi.com) and the [Bands In Town API](http://www.a...",
    "forks_count": 2,
    "html_url": "https://github.com/CaptainEFFF/liri-node-app",
    "keywords": [
        "Windows use after free"
    ],
    "language": "JavaScript",
    "repo_name": "liri-node-app",
    "repo_owner": "CaptainEFFF",
    "repotime": "2019-06-04, 15:50:11",
    "stargazers_count": 7,
    "watchers_count": 7
}
{
    "commits_count": 11,
    "date_started": "2019-05-12",
    "date_updated": "2019-06-04",
    "description": "A simple PHP application to learn SQL Injection detection and exploitation techniques.",
    "forks_count": 57,
    "html_url": "https://github.com/appsecco/sqlinjection-training-app",
    "keywords": [
        "sql injection"
    ],
    "language": "PHP",
    "repo_name": "sqlinjection-training-app",
    "repo_owner": "appsecco",
    "repotime": "2019-06-04, 15:50:57",
    "stargazers_count": 117,
    "watchers_count": 117
}
{
    "commits_count": 10,
    "date_started": "2019-05-28",
    "date_updated": "2019-06-02",
    "description": "Find directory Local File Inclusion on download website application query",
    "forks_count": 0,
    "html_url": "https://github.com/FachrulRH/lfi-attack",
    "keywords": [
        "local file inclusion"
    ],
    "language": "Python",
    "repo_name": "lfi-attack",
    "repo_owner": "FachrulRH",
    "repotime": "2019-06-02, 15:56:25",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 52,
    "date_started": "2019-11-04",
    "date_updated": "2019-06-29",
    "description": "Path Traversal to Traversal Brute with 35,000 ( 35K ) payloads",
    "forks_count": 0,
    "html_url": "https://github.com/marciopocebon/Attackpath",
    "keywords": [
        "path traversal attack"
    ],
    "language": null,
    "repo_name": "Attackpath",
    "repo_owner": "marciopocebon",
    "repotime": "2019-06-29, 16:08:51",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2019-06-26",
    "date_updated": "2019-06-25",
    "description": "Server and avi file to exploit FFmpeg HLS parse",
    "forks_count": 9,
    "html_url": "https://github.com/0xcoyote/FFmpeg-HLS-SSRF",
    "keywords": [
        "ssrf"
    ],
    "language": "Python",
    "repo_name": "FFmpeg-HLS-SSRF",
    "repo_owner": "0xcoyote",
    "repotime": "2019-06-25, 23:21:22",
    "stargazers_count": 21,
    "watchers_count": 21
}
{
    "commits_count": 26,
    "date_started": "2016-05-27",
    "date_updated": "2019-06-21",
    "description": "利用XSS入侵内网(Use XSS automation Invade intranet)",
    "forks_count": 68,
    "html_url": "https://github.com/BlackHole1/WebRtcXSS",
    "keywords": [
        "xss"
    ],
    "language": "PHP",
    "repo_name": "WebRtcXSS",
    "repo_owner": "BlackHole1",
    "repotime": "2019-06-21, 13:33:44",
    "stargazers_count": 196,
    "watchers_count": 196
}
{
    "commits_count": 3,
    "date_started": "2019-06-13",
    "date_updated": "2019-06-17",
    "description": "&amp;&#35;35; Node.js &amp;amp; MySQL  &amp;&#35;35;&amp;&#35;35; Overview  In this activity, you'll be creating an Amazon-like storefront with the MySQL skills you learned this unit. The app will take in orders from customers and deplete stock from the store's inventory. As a bonus task, you can program your app to track product sales across your store's departments and then provide a summary of the highest-grossing departments in the store.  Make sure you save and require the MySQL and Inquirer npm packages in your homework files--your app will need them for data input and storage.  &amp;&#35;35;&amp;&#35;35; Submission Guide  Make sure you use the normal GitHub. Because this is a CLI App, there will be no need to deploy it to Heroku. This time, though, you need to include screenshots, a gif, and/or a video showing us that you got the app working with no bugs. You can include these screenshots or a link to a video in a `README.md` file.  * Include screenshots (or a video) of typical user flows through your application (for the...",
    "forks_count": 0,
    "html_url": "https://github.com/CaptainEFFF/bamazon",
    "keywords": [
        "Windows use after free"
    ],
    "language": "JavaScript",
    "repo_name": "bamazon",
    "repo_owner": "CaptainEFFF",
    "repotime": "2019-06-17, 19:44:24",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2019-06-13",
    "date_updated": "2019-06-13",
    "description": "    {   &amp;quot;releases&amp;quot;: {     &amp;quot;2.0.4&amp;quot;: [       &amp;quot;[Fixed] Refresh for Enterprise repositories did not handle API error querying branches - &amp;&#35;35;7713&amp;quot;,       &amp;quot;[Fixed] Missing \\&amp;quot;Discard all changes\\&amp;quot; context menu in Changes header - &amp;&#35;35;7696&amp;quot;,       &amp;quot;[Fixed] \\&amp;quot;Select all\\&amp;quot; keyboard shortcut not firing on Windows - &amp;&#35;35;7759&amp;quot;     ],     &amp;quot;2.0.4-beta1&amp;quot;: [       &amp;quot;[Fixed] Refresh for Enterprise repositories did not handle API error querying branches - &amp;&#35;35;7713&amp;quot;,       &amp;quot;[Fixed] Missing \\&amp;quot;Discard all changes\\&amp;quot; context menu in Changes header - &amp;&#35;35;7696&amp;quot;,       &amp;quot;[Fixed] \\&amp;quot;Select all\\&amp;quot; keyboard shortcut not firing on Windows - &amp;&#35;35;7759&amp;quot;     ],     &amp;quot;2.0.4-beta0&amp;quot;: [       &amp;quot;[Added] Extend crash reports with more information about application state for troubleshooting - &amp;&#35;35;7693&amp;quot;,       &amp;quot;[Fixed] Crash when attempting to update pull requests with part...",
    "forks_count": 30,
    "html_url": "https://github.com/klonnet23/helloy-word",
    "keywords": [
        "wrong input validation",
        "hard coded password"
    ],
    "language": null,
    "repo_name": "helloy-word",
    "repo_owner": "klonnet23",
    "repotime": "2019-06-13, 04:59:11",
    "stargazers_count": 56,
    "watchers_count": 56
}
{
    "commits_count": 4,
    "date_started": "2019-06-09",
    "date_updated": "2019-06-09",
    "description": "RCE through Microsoft.XMLDOM com object without touching disk",
    "forks_count": 0,
    "html_url": "https://github.com/ashr/COM-XSL-Load-InMem-DotNet",
    "keywords": [
        "Microsoft rce"
    ],
    "language": "C#",
    "repo_name": "COM-XSL-Load-InMem-DotNet",
    "repo_owner": "ashr",
    "repotime": "2019-06-09, 22:00:03",
    "stargazers_count": 7,
    "watchers_count": 7
}
{
    "commits_count": 84,
    "date_started": "2018-02-17",
    "date_updated": "2019-06-05",
    "description": "Keeping Twitter for macOS alive with code injection",
    "forks_count": 5,
    "html_url": "https://github.com/nakiostudio/TwitterX",
    "keywords": [
        "code injection"
    ],
    "language": "Objective-C",
    "repo_name": "TwitterX",
    "repo_owner": "nakiostudio",
    "repotime": "2019-06-05, 08:57:43",
    "stargazers_count": 187,
    "watchers_count": 187
}
{
    "commits_count": 10,
    "date_started": "2019-05-30",
    "date_updated": "2019-06-04",
    "description": "&amp;&#35;35; LIRI Bot  &amp;&#35;35;&amp;&#35;35;&amp;&#35;35; Overview  In this assignment, you will make LIRI. LIRI is like iPhone's SIRI. However, while SIRI is a Speech Interpretation and Recognition Interface, LIRI is a _Language_ Interpretation and Recognition Interface. LIRI will be a command line node app that takes in parameters and gives you back data.  &amp;&#35;35;&amp;&#35;35;&amp;&#35;35; Before You Begin  1. LIRI will search Spotify for songs, Bands in Town for concerts, and OMDB for movies.  2. Make a new GitHub repository called liri-node-app and clone it to your computer.  3. To retrieve the data that will power this app, you'll need to send requests using the `axios` package to the Bands in Town, Spotify and OMDB APIs. You'll find these Node packages crucial for your assignment.     * [Node-Spotify-API](https://www.npmjs.com/package/node-spotify-api)     * [Axios](https://www.npmjs.com/package/axios)       * You'll use Axios to grab data from the [OMDB API](http://www.omdbapi.com) and the [Bands In Town API](http://www.a...",
    "forks_count": 2,
    "html_url": "https://github.com/CaptainEFFF/liri-node-app",
    "keywords": [
        "Windows use after free"
    ],
    "language": "JavaScript",
    "repo_name": "liri-node-app",
    "repo_owner": "CaptainEFFF",
    "repotime": "2019-06-04, 15:50:11",
    "stargazers_count": 7,
    "watchers_count": 7
}
{
    "commits_count": 11,
    "date_started": "2019-05-12",
    "date_updated": "2019-06-04",
    "description": "A simple PHP application to learn SQL Injection detection and exploitation techniques.",
    "forks_count": 57,
    "html_url": "https://github.com/appsecco/sqlinjection-training-app",
    "keywords": [
        "sql injection"
    ],
    "language": "PHP",
    "repo_name": "sqlinjection-training-app",
    "repo_owner": "appsecco",
    "repotime": "2019-06-04, 15:50:57",
    "stargazers_count": 117,
    "watchers_count": 117
}
{
    "commits_count": 10,
    "date_started": "2019-05-28",
    "date_updated": "2019-06-02",
    "description": "Find directory Local File Inclusion on download website application query",
    "forks_count": 0,
    "html_url": "https://github.com/FachrulRH/lfi-attack",
    "keywords": [
        "local file inclusion"
    ],
    "language": "Python",
    "repo_name": "lfi-attack",
    "repo_owner": "FachrulRH",
    "repotime": "2019-06-02, 15:56:25",
    "stargazers_count": 3,
    "watchers_count": 3
}
{
    "commits_count": 52,
    "date_started": "2019-11-04",
    "date_updated": "2019-06-29",
    "description": "Path Traversal to Traversal Brute with 35,000 ( 35K ) payloads",
    "forks_count": 0,
    "html_url": "https://github.com/marciopocebon/Attackpath",
    "keywords": [
        "path traversal attack"
    ],
    "language": null,
    "repo_name": "Attackpath",
    "repo_owner": "marciopocebon",
    "repotime": "2019-06-29, 16:08:51",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 4,
    "date_started": "2019-06-26",
    "date_updated": "2019-06-25",
    "description": "Server and avi file to exploit FFmpeg HLS parse",
    "forks_count": 9,
    "html_url": "https://github.com/0xcoyote/FFmpeg-HLS-SSRF",
    "keywords": [
        "ssrf"
    ],
    "language": "Python",
    "repo_name": "FFmpeg-HLS-SSRF",
    "repo_owner": "0xcoyote",
    "repotime": "2019-06-25, 23:21:22",
    "stargazers_count": 21,
    "watchers_count": 21
}
{
    "commits_count": 26,
    "date_started": "2016-05-27",
    "date_updated": "2019-06-21",
    "description": "利用XSS入侵内网(Use XSS automation Invade intranet)",
    "forks_count": 68,
    "html_url": "https://github.com/BlackHole1/WebRtcXSS",
    "keywords": [
        "xss"
    ],
    "language": "PHP",
    "repo_name": "WebRtcXSS",
    "repo_owner": "BlackHole1",
    "repotime": "2019-06-21, 13:33:44",
    "stargazers_count": 196,
    "watchers_count": 196
}
{
    "commits_count": 3,
    "date_started": "2019-06-13",
    "date_updated": "2019-06-17",
    "description": "&amp;&#35;35; Node.js &amp;amp; MySQL  &amp;&#35;35;&amp;&#35;35; Overview  In this activity, you'll be creating an Amazon-like storefront with the MySQL skills you learned this unit. The app will take in orders from customers and deplete stock from the store's inventory. As a bonus task, you can program your app to track product sales across your store's departments and then provide a summary of the highest-grossing departments in the store.  Make sure you save and require the MySQL and Inquirer npm packages in your homework files--your app will need them for data input and storage.  &amp;&#35;35;&amp;&#35;35; Submission Guide  Make sure you use the normal GitHub. Because this is a CLI App, there will be no need to deploy it to Heroku. This time, though, you need to include screenshots, a gif, and/or a video showing us that you got the app working with no bugs. You can include these screenshots or a link to a video in a `README.md` file.  * Include screenshots (or a video) of typical user flows through your application (for the...",
    "forks_count": 0,
    "html_url": "https://github.com/CaptainEFFF/bamazon",
    "keywords": [
        "Windows use after free"
    ],
    "language": "JavaScript",
    "repo_name": "bamazon",
    "repo_owner": "CaptainEFFF",
    "repotime": "2019-06-17, 19:44:24",
    "stargazers_count": 0,
    "watchers_count": 0
}
{
    "commits_count": 2,
    "date_started": "2019-06-13",
    "date_updated": "2019-06-13",
    "description": "    {   &amp;quot;releases&amp;quot;: {     &amp;quot;2.0.4&amp;quot;: [       &amp;quot;[Fixed] Refresh for Enterprise repositories did not handle API error querying branches - &amp;&#35;35;7713&amp;quot;,       &amp;quot;[Fixed] Missing \\&amp;quot;Discard all changes\\&amp;quot; context menu in Changes header - &amp;&#35;35;7696&amp;quot;,       &amp;quot;[Fixed] \\&amp;quot;Select all\\&amp;quot; keyboard shortcut not firing on Windows - &amp;&#35;35;7759&amp;quot;     ],     &amp;quot;2.0.4-beta1&amp;quot;: [       &amp;quot;[Fixed] Refresh for Enterprise repositories did not handle API error querying branches - &amp;&#35;35;7713&amp;quot;,       &amp;quot;[Fixed] Missing \\&amp;quot;Discard all changes\\&amp;quot; context menu in Changes header - &amp;&#35;35;7696&amp;quot;,       &amp;quot;[Fixed] \\&amp;quot;Select all\\&amp;quot; keyboard shortcut not firing on Windows - &amp;&#35;35;7759&amp;quot;     ],     &amp;quot;2.0.4-beta0&amp;quot;: [       &amp;quot;[Added] Extend crash reports with more information about application state for troubleshooting - &amp;&#35;35;7693&amp;quot;,       &amp;quot;[Fixed] Crash when attempting to update pull requests with part...",
    "forks_count": 29,
    "html_url": "https://github.com/klonnet23/helloy-word",
    "keywords": [
        "wrong input validation",
        "hard coded password"
    ],
    "language": null,
    "repo_name": "helloy-word",
    "repo_owner": "klonnet23",
    "repotime": "2019-06-13, 04:59:11",
    "stargazers_count": 57,
    "watchers_count": 57
}
{
    "commits_count": 4,
    "date_started": "2019-06-09",
    "date_updated": "2019-06-09",
    "description": "RCE through Microsoft.XMLDOM com object without touching disk",
    "forks_count": 0,
    "html_url": "https://github.com/ashr/COM-XSL-Load-InMem-DotNet",
    "keywords": [
        "Microsoft rce"
    ],
    "language": "C#",
    "repo_name": "COM-XSL-Load-InMem-DotNet",
    "repo_owner": "ashr",
    "repotime": "2019-06-09, 22:00:03",
    "stargazers_count": 7,
    "watchers_count": 7
}
{
    "commits_count": 84,
    "date_started": "2018-02-17",
    "date_updated": "2019-06-05",
    "description": "Keeping Twitter for macOS alive with code injection",
    "forks_count": 5,
    "html_url": "https://github.com/nakiostudio/TwitterX",
    "keywords": [
        "code injection"
    ],
    "language": "Objective-C",
    "repo_name": "TwitterX",
    "repo_owner": "nakiostudio",
    "repotime": "2019-06-05, 08:57:43",
    "stargazers_count": 187,
    "watchers_count": 187
}
{
    "commits_count": 10,
    "date_started": "2019-05-30",
    "date_updated": "2019-06-04",
    "description": "&amp;&#35;35; LIRI Bot  &amp;&#35;35;&amp;&#35;35;&amp;&#35;35; Overview  In this assignment, you will make LIRI. LIRI is like iPhone's SIRI. However, while SIRI is a Speech Interpretation and Recognition Interface, LIRI is a _Language_ Interpretation and Recognition Interface. LIRI will be a command line node app that takes in parameters and gives you back data.  &amp;&#35;35;&amp;&#35;35;&amp;&#35;35; Before You Begin  1. LIRI will search Spotify for songs, Bands in Town for concerts, and OMDB for movies.  2. Make a new GitHub repository called liri-node-app and clone it to your computer.  3. To retrieve the data that will power this app, you'll need to send requests using the `axios` package to the Bands in Town, Spotify and OMDB APIs. You'll find these Node packages crucial for your assignment.     * [Node-Spotify-API](https://www.npmjs.com/package/node-spotify-api)     * [Axios](https://www.npmjs.com/package/axios)       * You'll use Axios to grab data from the [OMDB API](http://www.omdbapi.com) and the [Bands In Town API](http://www.a...",
    "forks_count": 2,
    "html_url": "https://github.com/CaptainEFFF/liri-node-app",
    "keywords": [
        "Windows use after free"
    ],
    "language": "JavaScript",
    "repo_name": "liri-node-app",
    "repo_owner": "CaptainEFFF",
    "repotime": "2019-06-04, 15:50:11",
    "stargazers_count": 7,
    "watchers_count": 7
}
{
    "commits_count": 11,
    "date_started": "2019-05-12",
    "date_updated": "2019-06-04",
    "description": "A simple PHP application to learn SQL Injection detection and exploitation techniques.",
    "forks_count": 57,
    "html_url": "https://github.com/appsecco/sqlinjection-training-app",
    "keywords": [
        "sql injection"
    ],
    "language": "PHP",
    "repo_name": "sqlinjection-training-app",
    "repo_owner": "appsecco",
    "repotime": "2019-06-04, 15:50:57",
    "stargazers_count": 116,
    "watchers_count": 116
}
{
    "commits_count": 10,
    "date_started": "2019-05-28",
    "date_updated": "2019-06-02",
    "description": "Find directory Local File Inclusion on download website application query",
    "forks_count": 0,
    "html_url": "https://github.com/FachrulRH/lfi-attack",
    "keywords": [
        "local file inclusion"
    ],
    "language": "Python",
    "repo_name": "lfi-attack",
    "repo_owner": "FachrulRH",
    "repotime": "2019-06-02, 15:56:25",
    "stargazers_count": 3,
    "watchers_count": 3
}
